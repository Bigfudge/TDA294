\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Oct 28 15:36:18 CET 2018
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "BinarySearch";

\proofObligation "#Proof Obligation Settings
#Sun Oct 28 15:36:18 CET 2018
name=BinarySearch[BinarySearch\\:\\:performBinarySearch()].JML normal_behavior operation contract.0
contract=BinarySearch[BinarySearch\\:\\:performBinarySearch()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "simonpersson" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "16674")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1"))
(rule "translateJavaUnaryMinusInt" (formula "1") (term "1,0,0,0,0,0,1"))
(rule "neg_literal" (formula "1") (term "1,0,0,0,0,0,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "exLeft" (formula "6") (inst "sk=q_1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "assignment" (formula "12"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0,0"))
(rule "nnf_imp2or" (formula "5") (term "0,0"))
(rule "nnf_notAnd" (formula "5") (term "0,0,0"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0"))
(rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0,0"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0,0"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0,0"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0,0"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,0"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0,0"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,0,0"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,0"))
(rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
(rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
(rule "Class_invariant_axiom_for_BinarySearch" (formula "9") (ifseqformula "3"))
(rule "true_left" (formula "9"))
(rule "commute_or_2" (formula "5") (term "0,0,0"))
(rule "commute_or" (formula "5") (term "0,0,0,0"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_performBinarySearch_0,savedHeapBefore_performBinarySearch_0"))
(builtin "One Step Simplification" (formula "11"))
(rule "methodCallUnfoldArguments" (formula "11") (term "1"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "var_2"))
(rule "stringAssignment" (formula "11") (term "1"))
(builtin "One Step Simplification" (formula "13"))
(builtin "One Step Simplification" (formula "1"))
(builtin "One Step Simplification" (formula "2"))
(rule "notLeft" (formula "1"))
(rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "1,0") (ifseqformula "2"))
(rule "replace_known_right" (formula "9") (term "0") (ifseqformula "13"))
(builtin "One Step Simplification" (formula "9"))
(rule "methodCallWithinClass" (formula "14") (term "1") (userinteraction))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "message_1"))
(rule "assignment" (formula "14") (term "1"))
(builtin "One Step Simplification" (formula "14"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_report_0,savedHeapBefore_report_0"))
(builtin "One Step Simplification" (formula "14"))
(rule "methodCallEmptyReturn" (formula "14") (term "1"))
(rule "blockEmpty" (formula "14") (term "1"))
(rule "methodCallUnfoldArguments" (formula "14") (term "1"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "var_3"))
(rule "assignment_read_attribute_this" (formula "14"))
(builtin "One Step Simplification" (formula "14"))
(builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_eliminateDuplicates_0,exc_1,heapAfter_eliminateDuplicates_0,anon_heap_eliminateDuplicates_0") (contract "BinarySearch[BinarySearch::eliminateDuplicates([I)].JML normal_behavior operation contract.0"))
(branch "Post (eliminateDuplicates)"
   (builtin "One Step Simplification" (formula "16"))
   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")))
   (rule "andLeft" (formula "12") (userinteraction))
   (rule "andLeft" (formula "13") (userinteraction))
   (rule "andLeft" (formula "14") (userinteraction))
   (rule "andLeft" (formula "14") (userinteraction))
   (rule "andLeft" (formula "15") (userinteraction))
   (rule "allLeft" (formula "14") (inst "t=int::select(heap, self, BinarySearch::$query)") (userinteraction))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,0"))
   (rule "blockEmpty" (formula "21") (term "1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0"))
   (rule "pullOutSelect" (formula "15") (term "1,1,0,0,0,0") (inst "selectSK=BinarySearch_size_0"))
   (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "15"))
   (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "15"))
   (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "12"))
   (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
   (rule "elementOfSingleton" (formula "15") (term "0,0"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "applyEqReverse" (formula "17") (term "1,1,0,0,0") (ifseqformula "15"))
   (rule "applyEqReverse" (formula "16") (term "1,1,0,0,0,0") (ifseqformula "15"))
   (rule "applyEqReverse" (formula "14") (term "1,1,0,0,0") (ifseqformula "15"))
   (rule "hideAuxiliaryEq" (formula "15"))
   (rule "nnf_imp2or" (formula "16") (term "0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
   (rule "Class_invariant_axiom_for_BinarySearch" (formula "17") (ifseqformula "4"))
   (rule "true_left" (formula "17"))
   (rule "commute_or_2" (formula "16") (term "0,0,0"))
   (rule "cnf_eqv" (formula "15") (term "0"))
   (rule "nnf_notEx" (formula "15") (term "1,0,0"))
   (rule "nnf_notEx" (formula "15") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "15") (term "0,1,0,0"))
   (rule "nnf_notAnd" (formula "15") (term "0,0,1,0"))
   (rule "nnf_notAnd" (formula "15") (term "0,0,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,0,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,1,0,0"))
   (rule "nnf_notAnd" (formula "15") (term "0,0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,1,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,1,0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,0,1,0"))
   (rule "distr_forallAnd" (formula "15"))
   (rule "andLeft" (formula "15"))
   (rule "methodCallUnfoldArguments" (formula "21") (term "1"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "var_4"))
   (rule "compound_addition_2" (formula "21") (term "1") (inst "#v1=x") (inst "#v0=s"))
   (rule "variableDeclarationAssign" (formula "21") (term "1"))
   (rule "variableDeclaration" (formula "21") (term "1") (newnames "s"))
   (rule "stringAssignment" (formula "21") (term "1"))
   (builtin "One Step Simplification" (formula "23"))
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (ifseqformula "14"))
   (rule "notLeft" (formula "1"))
   (rule "variableDeclarationAssign" (formula "23") (term "1"))
   (rule "variableDeclaration" (formula "23") (term "1") (newnames "x"))
   (rule "assignment_read_attribute_this" (formula "23"))
   (builtin "One Step Simplification" (formula "23"))
   (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=BinarySearch_query_0"))
   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "5")))
   (rule "elementOfSingleton" (formula "1") (term "0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "1"))
   (rule "hideAuxiliaryEq" (formula "1"))
   (rule "stringConcatIntExpRight" (formula "23") (term "1") (inst "sk=sk_0"))
   (builtin "One Step Simplification" (formula "25"))
   (builtin "One Step Simplification" (formula "24"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "poolKeyIsContentOfValue" (formula "1") (term "0,1"))
   (rule "ex_pull_out3" (formula "18") (term "0"))
   (rule "ex_pull_out2" (formula "17") (term "0"))
   (rule "all_pull_out2" (formula "18") (term "0,0"))
   (rule "cnf_rightDist" (formula "18") (term "0,0,0"))
   (rule "shift_paren_or" (formula "18") (term "1,0,0,0"))
   (rule "commute_or" (formula "18") (term "0,1,0,0,0"))
   (rule "cnf_rightDist" (formula "18") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "18") (term "0,0,0,0,0"))
   (rule "shift_paren_or" (formula "18") (term "1,0,0,0,0"))
   (rule "commute_or_2" (formula "18") (term "0,0,0,0,0,0"))
   (rule "shift_paren_or" (formula "18") (term "0,1,0,0,0,0"))
   (rule "commute_or" (formula "18") (term "0,0,1,0,0,0,0"))
   (rule "all_pull_out3" (formula "17") (term "0,0"))
   (rule "commute_or" (formula "17") (term "0,0,0"))
   (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
   (rule "shift_paren_or" (formula "17") (term "1,0,0,0"))
   (rule "commute_or" (formula "17") (term "0,1,0,0,0"))
   (rule "cnf_rightDist" (formula "17") (term "0,0,0,0"))
   (rule "commute_or_2" (formula "17") (term "0,0,0,0,0"))
   (rule "shift_paren_or" (formula "17") (term "1,0,0,0,0"))
   (rule "commute_or_2" (formula "17") (term "0,0,0,0,0,0"))
   (rule "commute_or" (formula "17") (term "0,1,0,0,0,0"))
   (rule "commute_and_2" (formula "18") (term "0,0,0"))
   (rule "commute_and_2" (formula "17") (term "0,0,0"))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
   (rule "andLeft" (formula "1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
   (rule "add_literals" (formula "1") (term "0,0,1"))
   (rule "lenOfSeqConcat" (formula "1") (term "1,0,1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "add_literals" (formula "1") (term "1,0,1"))
   (rule "add_literals" (formula "1") (term "0,1"))
   (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
   (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "3"))
   (rule "lenOfSeqConcat" (formula "1") (term "0"))
   (rule "polySimp_homoEq" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "polySimp_addComm1" (formula "1") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "add_literals" (formula "1") (term "0,1,0"))
   (rule "mul_literals" (formula "1") (term "1,0"))
   (rule "add_literals" (formula "1") (term "0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "applyEq" (formula "1") (term "0,0,1,0,0,1,0,0") (ifseqformula "2"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
   (rule "lenOfSeqConcat" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "add_literals" (formula "1") (term "0,1,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
   (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "methodCallWithinClass" (formula "25") (term "1") (userinteraction))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "message_2"))
   (rule "assignment" (formula "25") (term "1"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_report_1,savedHeapBefore_report_1"))
   (builtin "One Step Simplification" (formula "25"))
   (rule "methodCallEmptyReturn" (formula "25") (term "1"))
   (rule "blockEmpty" (formula "25") (term "1"))
   (rule "variableDeclarationAssign" (formula "25") (term "1"))
   (rule "variableDeclaration" (formula "25") (term "1") (newnames "searchResult"))
   (builtin "Use Operation Contract" (formula "25") (newnames "heapBefore_search,result_0,exc_2,heapAfter_search,anon_heap_search") (contract "BinarySearch[BinarySearch::search()].JML normal_behavior operation contract.0"))
   (branch "Post (search)"
      (builtin "One Step Simplification" (formula "21"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "translateJavaUnaryMinusInt" (formula "21") (term "1,0,0,0,0,1,1"))
      (rule "neg_literal" (formula "21") (term "1,0,0,0,0,1,1"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "andLeft" (formula "23"))
      (rule "notLeft" (formula "23"))
      (rule "assignment" (formula "31") (term "1"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "pullOutSelect" (formula "23") (term "1") (inst "selectSK=BinarySearch_query_2"))
      (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")))
      (rule "ifthenelse_negated" (formula "23") (term "0"))
      (rule "pullOutSelect" (formula "24") (term "1,2,0") (inst "selectSK=BinarySearch_numbers_1"))
      (rule "applyEq" (formula "25") (term "1,1,0") (ifseqformula "24"))
      (rule "applyEq" (formula "25") (term "0,0,0,0,0") (ifseqformula "24"))
      (rule "applyEq" (formula "25") (term "1,0,0,1,0,0") (ifseqformula "24"))
      (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")))
      (rule "ifthenelse_negated" (formula "24") (term "0"))
      (rule "pullOutSelect" (formula "23") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
      (rule "applyEq" (formula "25") (term "0,0,0") (ifseqformula "23"))
      (rule "simplifySelectOfCreate" (formula "23"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "33")))
      (rule "castDel" (formula "23") (term "1,0"))
      (rule "eqSymm" (formula "23") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "23") (term "0,0"))
      (rule "replace_known_right" (formula "23") (term "1,0,0") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")))
      (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")) (ifInst ""  (formula "5")))
      (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "23"))
      (rule "applyEqReverse" (formula "25") (term "0,0,0") (ifseqformula "23"))
      (rule "hideAuxiliaryEq" (formula "23"))
      (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "simplifySelectOfCreate" (formula "24"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")))
      (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "5")))
      (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "simplifySelectOfCreate" (formula "23"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "32")))
      (rule "replaceKnownSelect_taclet0_2" (formula "23") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "23") (term "0"))
      (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "23"))
      (rule "hideAuxiliaryEq" (formula "23"))
      (rule "elementOfSingleton" (formula "23") (term "0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "applyEqReverse" (formula "24") (term "1,2,0") (ifseqformula "23"))
      (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0,0") (ifseqformula "23"))
      (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0") (ifseqformula "23"))
      (rule "applyEqReverse" (formula "24") (term "1,1,0") (ifseqformula "23"))
      (rule "hideAuxiliaryEq" (formula "23"))
      (rule "replace_known_right" (formula "23") (term "0,0,0,0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "ifthenelse_negated" (formula "23") (term "0"))
      (rule "pullOutSelect" (formula "23") (term "1,0") (inst "selectSK=arr_12"))
      (rule "simplifySelectOfCreate" (formula "23"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")))
      (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "11")))
      (rule "elementOfSingleton" (formula "23") (term "0,0"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "applyEqReverse" (formula "24") (term "1,0") (ifseqformula "23"))
      (rule "hideAuxiliaryEq" (formula "23"))
      (rule "pullOutSelect" (formula "23") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
      (rule "simplifySelectOfCreate" (formula "23"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")))
      (rule "castDel" (formula "23") (term "1,0"))
      (rule "eqSymm" (formula "23") (term "0,0"))
      (rule "sortsDisjointModuloNull" (formula "23") (term "0,0"))
      (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "30"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")))
      (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "11")))
      (rule "applyEqReverse" (formula "24") (term "0,0,0") (ifseqformula "23"))
      (rule "hideAuxiliaryEq" (formula "23"))
      (rule "replace_known_left" (formula "23") (term "0,0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "23"))
      (rule "Class_invariant_axiom_for_BinarySearch" (formula "24") (ifseqformula "6"))
      (rule "true_left" (formula "24"))
      (rule "methodCallReturn" (formula "30") (term "1"))
      (rule "assignment" (formula "30") (term "1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "methodCallEmpty" (formula "30") (term "1"))
      (rule "tryEmpty" (formula "30") (term "1"))
      (rule "emptyModality" (formula "30") (term "1"))
      (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "24")))
      (rule "replaceKnownSelect_taclet00_5" (formula "30") (term "1,0"))
      (rule "replaceKnownSelect_taclet00_4" (formula "30") (term "0,0"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "Class_invariant_axiom_for_BinarySearch" (formula "30") (ifseqformula "6"))
      (rule "closeTrue" (formula "30"))
   )
   (branch "Exceptional Post (search)"
      (builtin "One Step Simplification" (formula "27"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "translateJavaUnaryMinusInt" (formula "21") (term "1,0,0,0,0,1,1"))
      (rule "neg_literal" (formula "21") (term "1,0,0,0,0,1,1"))
      (rule "andLeft" (formula "21"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0") (ifseqformula "21"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "22"))
      (rule "andLeft" (formula "24"))
      (rule "notLeft" (formula "22"))
      (rule "close" (formula "25") (ifseqformula "24"))
   )
   (branch "Pre (search)"
      (builtin "One Step Simplification" (formula "25"))
      (rule "wellFormedCreate" (formula "25") (term "1"))
      (rule "wellFormedAnonEQ" (formula "25") (term "1") (ifseqformula "14"))
      (rule "replace_known_left" (formula "25") (term "0,1") (ifseqformula "4"))
      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "13")))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,1,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,1"))
      (rule "pullOutSelect" (formula "25") (term "1,1,0,0,0,0,1") (inst "selectSK=BinarySearch_size_1"))
      (rule "applyEq" (formula "26") (term "1,1,0,0,0,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfCreate" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
      (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "26") (term "1,1,0,0,0,1,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "25") (term "1,1,0,0,1,1") (inst "selectSK=BinarySearch_query_1"))
      (rule "simplifySelectOfCreate" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
      (rule "replaceKnownSelect_taclet0_2" (formula "1") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_3" (formula "1") (term "0"))
      (rule "applyEqReverse" (formula "26") (term "1,1,0,0,1,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "25") (term "0,0,0") (inst "selectSK=BinarySearch_numbers_0"))
      (rule "applyEq" (formula "26") (term "1,1,1,1,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "26") (term "1,0,1,0,0,0,1") (ifseqformula "1"))
      (rule "applyEq" (formula "26") (term "1,0,1,0,0,1,1") (ifseqformula "1"))
      (rule "simplifySelectOfCreate" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "6")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "26") (term "1,0,1,0,0,1,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "26") (term "0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "26") (term "1,0,1,0,0,0,1") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "26") (term "1,1,1,1,0,0,0,1") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "nnf_imp2or" (formula "25") (term "0,0,0"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0,0"))
      (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,0"))
      (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,0"))
      (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,0,0"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0,0"))
      (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,0"))
      (rule "Class_invariant_axiom_for_BinarySearch" (formula "25") (term "1,1") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "25"))
      (rule "equiv_left" (formula "16"))
      (branch
         (rule "exLeft" (formula "16") (inst "sk=i_1"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "exLeft" (formula "19") (inst "sk=i_2"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "inEqSimp_commuteLeq" (formula "17"))
         (rule "inEqSimp_commuteLeq" (formula "20"))
         (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_6"))
         (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "29")) (ifInst ""  (formula "11")))
         (rule "eqSymm" (formula "19"))
         (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "19"))
         (rule "hideAuxiliaryEq" (formula "19"))
         (rule "elementOfSingleton" (formula "18") (term "0,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_7"))
         (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "29")) (ifInst ""  (formula "11")))
         (rule "eqSymm" (formula "22"))
         (rule "applyEqReverse" (formula "21") (term "1") (ifseqformula "22"))
         (rule "hideAuxiliaryEq" (formula "22"))
         (rule "elementOfSingleton" (formula "21") (term "0,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andRight" (formula "30"))
         (branch
            (rule "allRight" (formula "30") (inst "sk=j_2"))
            (rule "allRight" (formula "30") (inst "sk=m_1"))
            (rule "orRight" (formula "30"))
            (rule "orRight" (formula "30"))
            (rule "orRight" (formula "30"))
            (rule "inEqSimp_leqRight" (formula "33"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_geqRight" (formula "33"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "32"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "33"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1"))
            (rule "polySimp_elimOne" (formula "4") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_10"))
            (rule "simplifySelectOfCreate" (formula "4"))
            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "34")))
            (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "33")) (ifInst ""  (formula "16")))
            (rule "elementOfSingleton" (formula "4") (term "0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "inEqSimp_commuteGeq" (formula "4"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
            (rule "times_zero_1" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_11"))
            (rule "simplifySelectOfCreate" (formula "5"))
            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "35")))
            (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "34")) (ifInst ""  (formula "17")))
            (rule "elementOfSingleton" (formula "5") (term "0,0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
            (rule "hideAuxiliaryEq" (formula "5"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "cut_direct" (formula "7") (term "0"))
            (branch "CUT: strPool(\"Searching for \").<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "allLeft" (formula "29") (inst "t=j_2"))
               (rule "replaceKnownSelect_taclet0020_19" (formula "29") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0020_20" (formula "29") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
               (rule "leq_literals" (formula "29") (term "0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "allLeft" (formula "29") (inst "t=m_1"))
               (rule "replaceKnownSelect_taclet0020_16" (formula "29") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0020_17" (formula "29") (term "0,1"))
               (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "3"))
               (rule "qeq_literals" (formula "29") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,0"))
               (rule "leq_literals" (formula "29") (term "0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "5"))
               (rule "andLeft" (formula "29"))
               (rule "inEqSimp_homoInEq1" (formula "29"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0"))
               (rule "polySimp_addComm0" (formula "29") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
               (rule "add_literals" (formula "29") (term "1,1,0"))
               (rule "times_zero_1" (formula "29") (term "1,0"))
               (rule "add_zero_right" (formula "29") (term "0"))
               (rule "leq_literals" (formula "29"))
               (rule "closeFalse" (formula "29"))
            )
            (branch "CUT: strPool(\"Searching for \").<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "7"))
               (rule "allLeft" (formula "29") (inst "t=j_2"))
               (rule "replaceKnownSelect_taclet0020_19" (formula "29") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0020_20" (formula "29") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,1,0"))
               (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "29") (term "1,0,0,0") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "29") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,1,0,0,0"))
               (rule "leq_literals" (formula "29") (term "0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "allLeft" (formula "29") (inst "t=m_1"))
               (rule "replaceKnownSelect_taclet0020_16" (formula "29") (term "0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0020_17" (formula "29") (term "0,1"))
               (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "3"))
               (rule "qeq_literals" (formula "29") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_contradInEq0" (formula "29") (term "0") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
               (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "29") (term "0,0,0"))
               (rule "leq_literals" (formula "29") (term "0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "5"))
               (rule "andLeft" (formula "29"))
               (rule "inEqSimp_homoInEq1" (formula "29"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0"))
               (rule "polySimp_addComm0" (formula "29") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
               (rule "add_literals" (formula "29") (term "1,1,0"))
               (rule "times_zero_1" (formula "29") (term "1,0"))
               (rule "add_zero_right" (formula "29") (term "0"))
               (rule "leq_literals" (formula "29"))
               (rule "closeFalse" (formula "29"))
            )
         )
         (branch
            (rule "nnf_ex2all" (formula "30"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
            (rule "cut_direct" (formula "3") (term "0"))
            (branch "CUT: strPool(\"Searching for \").<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "allLeft" (formula "1") (inst "t=i_1"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0") (ifseqformula "19"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,1,0"))
               (rule "leq_literals" (formula "1") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "18"))
               (rule "qeq_literals" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_9"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
               (rule "replaceKnownSelect_taclet020_11" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet020_12" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "closeTrue" (formula "27"))
            )
            (branch "CUT: strPool(\"Searching for \").<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "3"))
               (rule "allLeft" (formula "1") (inst "t=i_1"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "1,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "18"))
               (rule "qeq_literals" (formula "1") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "19"))
               (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0,0"))
               (rule "leq_literals" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=arr_8"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
               (rule "replaceKnownSelect_taclet020_11" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet020_12" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "closeTrue" (formula "27"))
            )
         )
      )
      (branch
         (rule "nnf_ex2all" (formula "20"))
         (rule "nnf_ex2all" (formula "20"))
         (rule "nnf_notAnd" (formula "2") (term "0"))
         (rule "nnf_notAnd" (formula "1") (term "0"))
         (rule "nnf_notAnd" (formula "2") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
         (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0"))
         (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
         (rule "mul_literals" (formula "2") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "1") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
         (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
         (rule "mul_literals" (formula "1") (term "1,0,0,0"))
         (rule "andRight" (formula "26"))
         (branch
            (rule "allRight" (formula "26") (inst "sk=j_1"))
            (rule "allRight" (formula "26") (inst "sk=m_0"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "orRight" (formula "26"))
            (rule "inEqSimp_leqRight" (formula "29"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "inEqSimp_geqRight" (formula "29"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "28"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "29"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "1"))
            (rule "polySimp_elimOne" (formula "4") (term "1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_2"))
            (rule "simplifySelectOfCreate" (formula "4"))
            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "30")))
            (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "29")) (ifInst ""  (formula "18")))
            (rule "elementOfSingleton" (formula "4") (term "0,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
            (rule "hideAuxiliaryEq" (formula "4"))
            (rule "inEqSimp_commuteGeq" (formula "4"))
            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
            (rule "times_zero_1" (formula "2") (term "0,0"))
            (rule "add_zero_left" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "pullOutSelect" (formula "5") (term "0") (inst "selectSK=arr_3"))
            (rule "simplifySelectOfCreate" (formula "5"))
            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "31")))
            (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "30")) (ifInst ""  (formula "19")))
            (rule "elementOfSingleton" (formula "5") (term "0,0"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "applyEqReverse" (formula "6") (term "0") (ifseqformula "5"))
            (rule "hideAuxiliaryEq" (formula "5"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "cut_direct" (formula "9") (term "0"))
            (branch "CUT: strPool(\"Searching for \").<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "10"))
               (rule "true_left" (formula "10"))
               (rule "allLeft" (formula "25") (inst "t=j_1"))
               (rule "replaceKnownSelect_taclet0120_15" (formula "25") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0120_16" (formula "25") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0"))
               (rule "leq_literals" (formula "25") (term "0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "allLeft" (formula "6") (inst "t=j_1"))
               (rule "replaceKnownSelect_taclet0120_15" (formula "6") (term "0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0120_16" (formula "6") (term "0,0,1"))
               (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "6") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
               (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0,0"))
               (rule "leq_literals" (formula "6") (term "0,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "notLeft" (formula "6"))
               (rule "allLeft" (formula "7") (inst "t=q_1"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "7") (term "1,0") (ifseqformula "18"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
               (rule "leq_literals" (formula "7") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "17"))
               (rule "qeq_literals" (formula "7") (term "0,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "notLeft" (formula "7"))
               (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "19")))
               (rule "eqSymm" (formula "28"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "27"))
               (rule "close" (formula "27") (ifseqformula "19"))
            )
            (branch "CUT: strPool(\"Searching for \").<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "9"))
               (rule "allLeft" (formula "25") (inst "t=j_1"))
               (rule "replaceKnownSelect_taclet0120_15" (formula "25") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0120_16" (formula "25") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0,0,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,0"))
               (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
               (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0,0,0") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0"))
               (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "25") (term "1,1,0,0,1,0,0,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,0"))
               (rule "leq_literals" (formula "25") (term "0,1,0,0,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "allLeft" (formula "6") (inst "t=j_1"))
               (rule "replaceKnownSelect_taclet0120_15" (formula "6") (term "0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet0120_16" (formula "6") (term "0,0,1"))
               (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "6") (term "1,0") (ifseqformula "4"))
               (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
               (rule "polySimp_addComm0" (formula "6") (term "0,0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
               (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
               (rule "leq_literals" (formula "6") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "6") (term "0,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "notLeft" (formula "6"))
               (rule "allLeft" (formula "7") (inst "t=q_1"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "17"))
               (rule "qeq_literals" (formula "7") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "inEqSimp_contradInEq1" (formula "7") (term "0") (ifseqformula "18"))
               (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
               (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0"))
               (rule "leq_literals" (formula "7") (term "0,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "notLeft" (formula "7"))
               (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_4"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")) (ifInst ""  (formula "19")))
               (rule "eqSymm" (formula "28"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "27"))
               (rule "close" (formula "27") (ifseqformula "19"))
            )
         )
         (branch
            (rule "nnf_ex2all" (formula "26"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
            (rule "cut_direct" (formula "5") (term "0"))
            (branch "CUT: strPool(\"Searching for \").<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "allLeft" (formula "3") (inst "t=q_1"))
               (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "13"))
               (rule "qeq_literals" (formula "3") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0,0"))
               (rule "leq_literals" (formula "3") (term "0,0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "15")))
               (rule "eqSymm" (formula "23"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "22"))
               (rule "close" (formula "22") (ifseqformula "15"))
            )
            (branch "CUT: strPool(\"Searching for \").<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "5"))
               (rule "allLeft" (formula "3") (inst "t=q_1"))
               (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,1,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0"))
               (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "14"))
               (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0"))
               (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
               (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
               (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
               (rule "leq_literals" (formula "3") (term "0,1,0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "13"))
               (rule "qeq_literals" (formula "3") (term "0,0"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "15")))
               (rule "eqSymm" (formula "23"))
               (rule "elementOfSingleton" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "eqSymm" (formula "22"))
               (rule "close" (formula "22") (ifseqformula "15"))
            )
         )
      )
   )
)
(branch "Exceptional Post (eliminateDuplicates)"
   (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")))
   (builtin "One Step Simplification" (formula "16"))
   (rule "andLeft" (formula "12"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "13"))
   (rule "close" (formula "16") (ifseqformula "15"))
)
(branch "Pre (eliminateDuplicates)"
   (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")) (ifInst ""  (formula "2")) (ifInst ""  (formula "13")) (ifInst ""  (formula "9")))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0,0"))
   (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "14") (term "1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0"))
   (rule "nnf_imp2or" (formula "14") (term "0,0,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,0"))
   (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,0"))
   (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,0"))
   (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,0"))
   (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0"))
   (rule "Class_invariant_axiom_for_BinarySearch" (formula "14") (term "1") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "allRight" (formula "14") (inst "sk=j_0"))
   (rule "allRight" (formula "14") (inst "sk=i_0"))
   (rule "orRight" (formula "14"))
   (rule "orRight" (formula "14"))
   (rule "orRight" (formula "14"))
   (rule "inEqSimp_geqRight" (formula "17"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "inEqSimp_geqRight" (formula "17"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "add_zero_left" (formula "1") (term "0,0"))
   (rule "polySimp_addComm0" (formula "1") (term "0"))
   (rule "inEqSimp_leqRight" (formula "16"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "inEqSimp_leqRight" (formula "17"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1"))
   (rule "polySimp_rightDist" (formula "4") (term "1"))
   (rule "mul_literals" (formula "4") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "mul_literals" (formula "1") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "allLeft" (formula "10") (inst "t=j_0"))
   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0"))
   (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0,0") (ifseqformula "3"))
   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
   (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0,0,0,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0"))
   (rule "leq_literals" (formula "10") (term "0,0,0,0,0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "allLeft" (formula "10") (inst "t=i_0"))
   (rule "inEqSimp_commuteGeq" (formula "10") (term "1,0"))
   (rule "inEqSimp_commuteLeq" (formula "10") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "10") (term "0,0,0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "1"))
   (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0"))
   (rule "leq_literals" (formula "10") (term "0,0"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "4"))
   (rule "andLeft" (formula "10"))
   (rule "inEqSimp_homoInEq1" (formula "10"))
   (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0"))
   (rule "polySimp_addComm0" (formula "10") (term "0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
   (rule "add_literals" (formula "10") (term "1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0"))
   (rule "add_zero_right" (formula "10") (term "0"))
   (rule "leq_literals" (formula "10"))
   (rule "closeFalse" (formula "10"))
)
)

}
