\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Oct 29 18:58:51 CET 2018
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=20000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Mon Oct 29 18:58:51 CET 2018
name=NumericTextBox[NumericTextBox\\:\\:backspace()].JML normal_behavior operation contract.0
contract=NumericTextBox[NumericTextBox\\:\\:backspace()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "simonpersson" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "10157")

(branch "dummy ID"
(rule "elementOfAllLocs" (formula "1") (term "0,0,0,0,1,0,1,1") (newnames "self,exc,heapAtPre,o,f"))
(rule "concrete_or_1" (formula "1") (term "0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,1,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "8") (term "0,0,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,1"))
(rule "polySimp_homoEq" (formula "8") (term "0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "1,1,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_gtToGeq" (formula "5"))
(rule "times_zero_1" (formula "5") (term "1,0,0"))
(rule "add_zero_right" (formula "5") (term "0,0"))
(rule "assignment" (formula "8") (term "1"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "polySimp_sepNegMonomial" (formula "8") (term "0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "all_unused" (formula "8") (term "1,0,1"))
(rule "all_unused" (formula "8") (term "1,0,1"))
(rule "concrete_and_3" (formula "8") (term "0,1"))
(rule "Class_invariant_axiom_for_NumericTextBox" (formula "6") (inst "x=x") (inst "x_0=x_0") (ifseqformula "3"))
(rule "inInt" (formula "6") (term "1,0,0,1"))
(rule "concrete_and_3" (formula "6") (term "0,0,1"))
(rule "inInt" (formula "6") (term "1,0,0,1,0"))
(rule "concrete_and_3" (formula "6") (term "0,0,1,0"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "6"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "5"))
(rule "leq_literals" (formula "6") (term "0"))
(rule "concrete_or_1" (formula "6"))
(rule "true_left" (formula "6"))
(rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
(rule "mul_literals" (formula "5") (term "0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "5"))
(rule "mul_literals" (formula "5") (term "1"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "commute_or_2" (formula "8") (term "0"))
(rule "commute_or" (formula "9") (term "0,0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_backspace,savedHeapBefore_backspace"))
(rule "simplifyUpdate2" (formula "12") (term "1"))
(rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "x"))
(rule "compound_equality_comparison_1" (formula "12") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "x_1"))
(rule "assignment_read_attribute_this" (formula "12"))
(rule "sequentialToParallel2" (formula "12"))
(rule "simplifyUpdate3" (formula "12") (term "1,0"))
(rule "equality_comparison_simple" (formula "12") (term "1"))
(rule "sequentialToParallel2" (formula "12"))
(rule "simplifyUpdate2" (formula "12"))
(rule "simplifyUpdate3" (formula "12") (term "1,0"))
(rule "applyOnElementary" (formula "12") (term "1,0"))
(rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "12") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "12") (term "1,0,1,0"))
(rule "applyOnRigidFormula" (formula "12") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "12") (term "1,0,0,1,0"))
(rule "applyOnPV" (formula "12") (term "0,0,0,1,0"))
(rule "inEqSimp_contradEq7" (formula "12") (term "0,0,1,0") (ifseqformula "6"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0"))
(rule "leq_literals" (formula "12") (term "0,0,0,1,0"))
(rule "concrete_and_2" (formula "12") (term "0,0,1,0"))
(rule "ifthenelse_false" (formula "12") (term "0,1,0"))
(rule "arrayLengthNotNegative" (formula "7") (term "1"))
(rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "5"))
(rule "leq_literals" (formula "7") (term "0"))
(rule "concrete_or_1" (formula "7"))
(rule "true_left" (formula "7"))
(rule "arrayLengthIsAShort" (formula "7") (term "1"))
(rule "inShort" (formula "7"))
(rule "true_left" (formula "7"))
(rule "ifSplit" (formula "12"))
(branch "if x true"
   (rule "simplifyUpdate2" (formula "13"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "boolean_not_equal_2" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (rule "false_to_not_true" (formula "1") (term "1"))
   (rule "simplifyUpdate2" (formula "13"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "applyOnRigidFormula" (formula "10"))
   (rule "applyOnPV" (formula "10") (term "0"))
   (rule "simplifyUpdate1" (formula "10") (term "1"))
   (rule "boolean_not_equal_2" (formula "10"))
   (rule "false_right" (formula "10"))
   (rule "postdecrement_attribute" (formula "12") (term "1") (inst "#v=n"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "n"))
   (rule "assignment" (formula "12") (term "1"))
   (rule "sequentialToParallel2" (formula "12"))
   (rule "simplifyUpdate3" (formula "12") (term "1,0"))
   (rule "eval_order_access4" (formula "12") (term "1") (inst "#v1=x") (inst "#v0=n_1"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "n_1"))
   (rule "assignment" (formula "12") (term "1"))
   (rule "sequentialToParallel2" (formula "12"))
   (rule "simplifyUpdate3" (formula "12") (term "1,0"))
   (rule "applyOnElementary" (formula "12") (term "1,0"))
   (rule "applyOnPV" (formula "12") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_2"))
   (rule "compound_int_cast_expression" (formula "12") (term "1") (inst "#v=x_3"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_3"))
   (rule "remove_parentheses_right" (formula "12") (term "1"))
   (rule "compound_subtraction_1" (formula "12") (term "1") (inst "#v=x_4"))
   (rule "variableDeclarationAssign" (formula "12") (term "1"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_4"))
   (rule "assignment_read_attribute" (formula "12"))
   (branch "Normal Execution (n != null)"
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "applyOnElementary" (formula "12") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "12") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "2,0,1,0"))
      (rule "assignmentSubtractionInt" (formula "12") (term "1"))
      (rule "translateJavaSubInt" (formula "12") (term "0,0,1"))
      (rule "polySimp_elimSub" (formula "12") (term "0,0,1"))
      (rule "mul_literals" (formula "12") (term "1,0,0,1"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "applyOnElementary" (formula "12") (term "1,0"))
      (rule "polySimp_addComm0" (formula "12") (term "1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "12") (term "1,0,1,0"))
      (rule "widening_identity_cast_5" (formula "12") (term "1"))
      (rule "assignment" (formula "12") (term "1"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "applyOnElementary" (formula "12") (term "1,0"))
      (rule "applyOnPV" (formula "12") (term "0,1,0"))
      (rule "assignment_write_attribute" (formula "12"))
      (branch "Normal Execution (n_1 != null)"
         (rule "sequentialToParallel2" (formula "12"))
         (rule "simplifyUpdate2" (formula "12"))
         (rule "simplifyUpdate3" (formula "12") (term "1,0"))
         (rule "applyOnElementary" (formula "12") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "3,0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "12") (term "3,0,1,0"))
         (rule "applyOnPV" (formula "12") (term "1,0,1,0"))
         (rule "eval_order_array_access1" (formula "12") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr"))
         (rule "assignment_read_attribute_this" (formula "12"))
         (rule "sequentialToParallel2" (formula "12"))
         (rule "simplifyUpdate3" (formula "12") (term "1,0"))
         (rule "applyOnElementary" (formula "12") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "12") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "2,0,1,0"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
         (rule "eval_order_array_access2" (formula "12") (term "1") (inst "#v0=x") (inst "#ar1=x_arr_1"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_1"))
         (rule "assignment" (formula "12") (term "1"))
         (rule "sequentialToParallel2" (formula "12"))
         (rule "simplifyUpdate2" (formula "12"))
         (rule "simplifyUpdate3" (formula "12") (term "1,0"))
         (rule "applyOnElementary" (formula "12") (term "1,0"))
         (rule "applyOnPV" (formula "12") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_5"))
         (rule "assignment_read_attribute_this" (formula "12"))
         (rule "sequentialToParallel2" (formula "12"))
         (rule "simplifyUpdate3" (formula "12") (term "1,0"))
         (rule "applyOnElementary" (formula "12") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
         (rule "applyOnPV" (formula "12") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "2,0,1,0"))
         (rule "pullOutSelect" (formula "12") (term "0,1,0") (inst "selectSK=NumericTextBox_cursorPosition_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "eqClose" (formula "1") (term "1,0,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0"))
         (rule "equalUnique" (formula "1") (term "0,0,0"))
         (rule "concrete_not_2" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "13") (term "0,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "eval_order_array_access3" (formula "12") (term "1") (inst "#v1=x_7") (inst "#v2=x_6") (inst "#v0=x_arr_2"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_arr_2"))
         (rule "assignment" (formula "12") (term "1"))
         (rule "sequentialToParallel2" (formula "12"))
         (rule "simplifyUpdate2" (formula "12"))
         (rule "simplifyUpdate3" (formula "12") (term "1,0"))
         (rule "applyOnElementary" (formula "12") (term "1,0"))
         (rule "applyOnPV" (formula "12") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_6"))
         (rule "assignment" (formula "12") (term "1"))
         (rule "sequentialToParallel2" (formula "12"))
         (rule "simplifyUpdate2" (formula "12"))
         (rule "simplifyUpdate3" (formula "12") (term "1,0"))
         (rule "applyOnElementary" (formula "12") (term "1,0"))
         (rule "applyOnPV" (formula "12") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "12") (term "1"))
         (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_7"))
         (rule "assignment_read_attribute_this" (formula "12"))
         (rule "sequentialToParallel2" (formula "12"))
         (rule "simplifyUpdate3" (formula "12") (term "1,0"))
         (rule "applyOnElementary" (formula "12") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
         (rule "applyOnPV" (formula "12") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "12") (term "2,0,1,0"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
         (rule "assignment_to_primitive_array_component" (formula "12"))
         (branch "Normal Execution (x_arr_2 != null)"
            (rule "sequentialToParallel2" (formula "12"))
            (rule "simplifyUpdate2" (formula "12"))
            (rule "simplifyUpdate3" (formula "12") (term "1,0"))
            (rule "applyOnElementary" (formula "12") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "12") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "12") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "12") (term "3,0,1,0"))
            (rule "simplifyUpdate1" (formula "12") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "12") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "12") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "12") (term "3,0,1,0"))
            (rule "applyOnRigidTerm" (formula "12") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "12") (term "0,2,0,1,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,1") (ifseqformula "1"))
            (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "11"))
            (rule "concrete_or_2" (formula "7"))
            (rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_8"))
            (rule "compound_inequality_comparison_1" (formula "13") (term "1") (inst "#v0=t"))
            (rule "variableDeclarationAssign" (formula "13") (term "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "t"))
            (rule "assignment_read_attribute_this" (formula "13"))
            (rule "sequentialToParallel2" (formula "13"))
            (rule "simplifyUpdate3" (formula "13") (term "1,0"))
            (rule "applyOnElementary" (formula "13") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "13") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "0,1,0"))
            (rule "inequality_comparison_simple" (formula "13") (term "1"))
            (rule "sequentialToParallel2" (formula "13"))
            (rule "simplifyUpdate2" (formula "13"))
            (rule "simplifyUpdate3" (formula "13") (term "1,0"))
            (rule "applyOnElementary" (formula "13") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
            (rule "applyOnRigidFormula" (formula "13") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "13") (term "0,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "13") (term "1,0,0,1,0"))
            (rule "ifSplit" (formula "13"))
            (branch "if x_8 true"
               (rule "simplifyUpdate2" (formula "14"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "ifthenelse_concrete4" (formula "1"))
               (rule "boolean_not_equal_2" (formula "1") (term "1"))
               (rule "concrete_or_4" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "eval_order_access1" (formula "14") (term "1") (inst "#v0=t"))
               (rule "variableDeclarationAssign" (formula "14") (term "1"))
               (rule "variableDeclaration" (formula "14") (term "1") (newnames "t_1"))
               (rule "assignment_read_attribute_this" (formula "14"))
               (rule "sequentialToParallel2" (formula "14"))
               (rule "simplifyUpdate3" (formula "14") (term "1,0"))
               (rule "applyOnElementary" (formula "14") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
               (rule "assignment_write_attribute" (formula "14"))
               (branch "Normal Execution (t_1 != null)"
                  (rule "sequentialToParallel2" (formula "14"))
                  (rule "simplifyUpdate2" (formula "14"))
                  (rule "simplifyUpdate3" (formula "14") (term "1,0"))
                  (rule "applyOnElementary" (formula "14") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
                  (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "14") (term "1,0,1,0"))
                  (rule "methodCallEmpty" (formula "14") (term "1"))
                  (rule "tryEmpty" (formula "14") (term "1"))
                  (rule "emptyModality" (formula "14") (term "1"))
                  (rule "applyOnRigidFormula" (formula "14"))
                  (rule "simplifyUpdate2" (formula "14") (term "1"))
                  (rule "simplifyUpdate2" (formula "14") (term "0"))
                  (rule "applyOnRigidFormula" (formula "14") (term "1"))
                  (rule "applyOnPV" (formula "14") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,1"))
                  (rule "eqClose" (formula "14") (term "1"))
                  (rule "concrete_and_3" (formula "14"))
                  (rule "applyOnRigidFormula" (formula "14"))
                  (rule "simplifyUpdate2" (formula "14") (term "1"))
                  (rule "applyOnRigidFormula" (formula "14") (term "0"))
                  (rule "simplifyUpdate1" (formula "14") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "14") (term "1"))
                  (rule "applyOnRigidTerm" (formula "14") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "2,0,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,0,0"))
                  (rule "applyOnPV" (formula "14") (term "0,0,0"))
                  (rule "eqSymm" (formula "14") (term "0"))
                  (rule "applyOnRigidFormula" (formula "14") (term "0,1"))
                  (rule "applyOnRigidFormula" (formula "14") (term "1,1"))
                  (rule "applyOnRigidTerm" (formula "14") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "0,0,0"))
                  (rule "polySimp_homoEq" (formula "14") (term "0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                  (rule "applyOnRigidTerm" (formula "14") (term "1,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,1,0,1"))
                  (rule "applyOnPV" (formula "14") (term "0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "2,1,0,1"))
                  (rule "applyOnRigidTerm" (formula "14") (term "0,0,1"))
                  (rule "applyOnPV" (formula "14") (term "0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "14") (term "0,1,1"))
                  (rule "applyOnRigidFormula" (formula "14") (term "1,1,1"))
                  (rule "applyOnPV" (formula "14") (term "0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,1,1,1"))
                  (rule "applyOnRigidTerm" (formula "14") (term "0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0,0"))
                  (rule "applyOnPV" (formula "14") (term "0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,1"))
                  (rule "applyOnRigidTerm" (formula "14") (term "2,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "14") (term "1,0,0,1"))
                  (rule "applyOnPV" (formula "14") (term "0,1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "2,1,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "14") (term "1,0,1,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,1,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "14") (term "0,0,1,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,1"))
                  (rule "applyOnRigidTerm" (formula "14") (term "0,2,0,0,1"))
                  (rule "applyOnPV" (formula "14") (term "0,0,2,0,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,0,2,0,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "2,0,2,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "14") (term "0,1,0,1,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0,1,1"))
                  (rule "applyOnPV" (formula "14") (term "0,0,1,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "14") (term "0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,0,0,0,1,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0"))
                  (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "0,1,0,0"))
                  (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,0,0"))
                  (rule "times_zero_1" (formula "14") (term "0,0"))
                  (rule "eqClose" (formula "14") (term "0"))
                  (rule "concrete_and_1" (formula "14"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "14") (term "0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "2,0,0,0,0,1"))
                  (rule "applyOnPV" (formula "14") (term "0,0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,0,0,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,0"))
                  (rule "applyOnRigidTerm" (formula "14") (term "1,0,1,0,1"))
                  (rule "applyOnPV" (formula "14") (term "0,1,0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "1,1,0,1,0,1"))
                  (rule "simplifyUpdate1" (formula "14") (term "2,1,0,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,2,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,2,0,0"))
                  (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "0,2,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "0,2,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,1"))
                  (rule "replace_known_right" (formula "14") (term "0,0,0,1") (ifseqformula "11"))
                  (rule "concrete_not_2" (formula "14") (term "0,0,1"))
                  (rule "concrete_impl_1" (formula "14") (term "0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,1"))
                  (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (rule "eqClose" (formula "1") (term "1,0,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                  (rule "eqClose" (formula "1") (term "0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
                  (rule "eqClose" (formula "15") (term "0"))
                  (rule "concrete_and_1" (formula "15"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=TextBoxRenderer_contentChanged_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "eqClose" (formula "1") (term "0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0"))
                  (rule "ifthenelse_true" (formula "1") (term "0"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
                  (rule "boolean_equal" (formula "15") (term "0"))
                  (rule "concrete_and_1" (formula "15"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "Class_invariant_axiom_for_NumericTextBox" (formula "14") (inst "x=x_18") (inst "x_0=x_0") (ifseqformula "3"))
                  (rule "inInt" (formula "14") (term "1,0,0,1"))
                  (rule "concrete_and_3" (formula "14") (term "0,0,1"))
                  (rule "inInt" (formula "14") (term "1,0,0,1,0"))
                  (rule "concrete_and_3" (formula "14") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "2,0,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0"))
                  (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "0,1,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,2,0,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,1"))
                  (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "1,0,0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "1,0,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,0,1,0"))
                  (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "1,1,0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "1,1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,0"))
                  (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "12"))
                  (rule "concrete_not_2" (formula "14") (term "0,0,0"))
                  (rule "concrete_and_1" (formula "14") (term "0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,2,0,1,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1"))
                  (rule "dismissNonSelectedField" (formula "14") (term "1,2,0,1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                  (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "6"))
                  (rule "concrete_and_1" (formula "14") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_subsumption0" (formula "14") (term "0,0") (ifseqformula "8"))
                  (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                  (rule "qeq_literals" (formula "14") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "14") (term "0,0"))
                  (rule "concrete_and_1" (formula "14") (term "0"))
                  (rule "nnf_imp2or" (formula "14") (term "0,1"))
                  (rule "nnf_imp2or" (formula "14") (term "0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,1"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1"))
                  (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
                  (rule "andRight" (formula "14"))
                  (branch
                     (rule "allRight" (formula "14") (inst "sk=x_0_1"))
                     (rule "orRight" (formula "14"))
                     (rule "orRight" (formula "14"))
                     (rule "inEqSimp_leqRight" (formula "14"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "15"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "Query_axiom_for_isSingleDigit_int__in_NumericTextBox" (formula "16") (term "0") (inst "isSingleDigit_sk=isSingleDigit_sk_3") (inst "#p0=x_1") (inst "#self=n") (inst "#res=x") (ifseqformula "5"))
                     (rule "eqSymm" (formula "1") (term "0,1"))
                     (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=arr_5"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                     (rule "eqClose" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                     (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                     (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                     (rule "apply_eq_boolean_rigid" (formula "2") (term "1,0,1") (ifseqformula "18"))
                     (rule "false_to_not_true" (formula "2") (term "0,1"))
                     (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "3"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "1") (term "0,0"))
                     (rule "ifthenelse_false" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "2") (term "0,1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "boxToDiamond" (formula "1") (term "1"))
                     (rule "double_not" (formula "1") (term "0,0,1"))
                     (rule "notLeft" (formula "1"))
                     (rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_isSingleDigit_2,savedHeapBefore_isSingleDigit_2"))
                     (rule "simplifyUpdate2" (formula "14") (term "1"))
                     (rule "returnUnfold" (formula "14") (term "1") (inst "#v0=x_2"))
                     (rule "variableDeclarationAssign" (formula "14") (term "1"))
                     (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_18"))
                     (rule "compound_assignment_3_nonsimple" (formula "14") (term "1"))
                     (rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x_19"))
                     (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_19"))
                     (rule "compound_assignment_2" (formula "14") (term "1") (inst "#v=x_20"))
                     (rule "variableDeclarationAssign" (formula "14") (term "1"))
                     (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_20"))
                     (rule "greater_equal_than_comparison_simple" (formula "14") (term "1"))
                     (rule "sequentialToParallel2" (formula "14"))
                     (rule "simplifyUpdate3" (formula "14") (term "1,0"))
                     (rule "applyOnElementary" (formula "14") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "14") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1,0"))
                     (rule "applyOnPV" (formula "14") (term "0,0,0,1,0"))
                     (rule "compound_assignment_1_new" (formula "14") (term "1"))
                     (rule "sequentialToParallel2" (formula "14"))
                     (rule "simplifyUpdate2" (formula "14"))
                     (rule "simplifyUpdate3" (formula "14") (term "1,0"))
                     (rule "applyOnElementary" (formula "14") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "14") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "14") (term "0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1,0"))
                     (rule "ifthenelse_concrete3" (formula "14") (term "0,0,1,0"))
                     (rule "boolean_not_equal_2" (formula "14") (term "1,0,0,1,0"))
                     (rule "concrete_or_4" (formula "14") (term "0,0,1,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "4"))
                     (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "ifElseSplit" (formula "15"))
                     (branch "if x_19 true"
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "simplifyUpdate2" (formula "16"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "ifthenelse_concrete4" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "1"))
                        (rule "concrete_or_4" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "inEqSimp_geqRight" (formula "15"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0"))
                        (rule "assignment" (formula "16") (term "1"))
                        (rule "sequentialToParallel2" (formula "16"))
                        (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "methodCallReturn" (formula "16") (term "1"))
                        (rule "assignment" (formula "16") (term "1"))
                        (rule "sequentialToParallel2" (formula "16"))
                        (rule "simplifyUpdate2" (formula "16"))
                        (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                        (rule "applyOnElementary" (formula "16") (term "1,0"))
                        (rule "applyOnPV" (formula "16") (term "0,1,0"))
                        (rule "methodCallEmpty" (formula "16") (term "1"))
                        (rule "simplifyUpdate2" (formula "16"))
                        (rule "emptyModality" (formula "16") (term "1"))
                        (rule "applyOnRigidFormula" (formula "16"))
                        (rule "simplifyUpdate1" (formula "16") (term "1"))
                        (rule "applyOnPV" (formula "16") (term "0"))
                        (rule "boolean_not_equal_2" (formula "16"))
                        (rule "false_right" (formula "16"))
                        (rule "allLeft" (formula "14") (inst "t=x_0_1"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                        (rule "Query_axiom_for_isSingleDigit_int__in_NumericTextBox" (formula "14") (term "0,0,0") (inst "isSingleDigit_sk=isSingleDigit_sk_5") (inst "#p0=x_1") (inst "#self=n") (inst "#res=x") (ifseqformula "8"))
                        (rule "eqSymm" (formula "14") (term "0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "15") (term "0,0,1"))
                        (rule "leq_literals" (formula "15") (term "0,1"))
                        (rule "concrete_and_2" (formula "15") (term "1"))
                        (rule "concrete_or_4" (formula "15"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "15") (term "0,1"))
                        (rule "concrete_and_2" (formula "15") (term "1"))
                        (rule "concrete_or_4" (formula "15"))
                        (rule "applyEqRigid" (formula "14") (term "1,0,1") (ifseqformula "15"))
                        (rule "boxToDiamond" (formula "14") (term "1"))
                        (rule "notLeft" (formula "14"))
                        (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_isSingleDigit_4,savedHeapBefore_isSingleDigit_4"))
                        (rule "simplifyUpdate2" (formula "17") (term "1"))
                        (rule "returnUnfold" (formula "17") (term "1") (inst "#v0=x_2"))
                        (rule "variableDeclarationAssign" (formula "17") (term "1"))
                        (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_24"))
                        (rule "compound_assignment_3_nonsimple" (formula "17") (term "1"))
                        (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x_25"))
                        (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_25"))
                        (rule "compound_assignment_2" (formula "17") (term "1") (inst "#v=x_26"))
                        (rule "variableDeclarationAssign" (formula "17") (term "1"))
                        (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_26"))
                        (rule "greater_equal_than_comparison_simple" (formula "17") (term "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "applyOnElementary" (formula "17") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "17") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "17") (term "0,0,0,1,0"))
                        (rule "concrete_and_2" (formula "17") (term "0,0,1,0"))
                        (rule "ifthenelse_false" (formula "17") (term "0,1,0"))
                        (rule "compound_assignment_1_new" (formula "17") (term "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "applyOnElementary" (formula "17") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                        (rule "boolean_not_equal_2" (formula "17") (term "0,0,1,0"))
                        (rule "ifthenelse_false" (formula "17") (term "0,1,0"))
                        (rule "ifElseSplit" (formula "17"))
                        (branch "if x_25 true"
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "simplifyUpdate2" (formula "18"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "simplifyUpdate1" (formula "1") (term "1"))
                           (rule "applyOnPV" (formula "1") (term "0"))
                           (rule "boolean_equal" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "17") (term "1"))
                           (rule "sequentialToParallel2" (formula "17"))
                           (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                           (rule "methodCallReturn" (formula "17") (term "1"))
                           (rule "assignment" (formula "17") (term "1"))
                           (rule "sequentialToParallel2" (formula "17"))
                           (rule "simplifyUpdate2" (formula "17"))
                           (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                           (rule "applyOnElementary" (formula "17") (term "1,0"))
                           (rule "applyOnPV" (formula "17") (term "0,1,0"))
                           (rule "methodCallEmpty" (formula "17") (term "1"))
                           (rule "simplifyUpdate2" (formula "17"))
                           (rule "emptyModality" (formula "17") (term "1"))
                           (rule "notRight" (formula "17"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "applyOnPV" (formula "1") (term "0"))
                           (rule "simplifyUpdate1" (formula "1") (term "1"))
                           (rule "boolean_not_equal_2" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_25 false"
                           (rule "false_to_not_true" (formula "1") (term "1"))
                           (rule "simplifyUpdate2" (formula "18"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "17"))
                           (rule "simplifyUpdate1" (formula "17") (term "1"))
                           (rule "applyOnPV" (formula "17") (term "0"))
                           (rule "boolean_equal" (formula "17"))
                           (rule "closeTrue" (formula "17"))
                        )
                     )
                     (branch "if x_19 false"
                        (rule "false_to_not_true" (formula "1") (term "1"))
                        (rule "simplifyUpdate2" (formula "16"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "15"))
                        (rule "simplifyUpdate1" (formula "15") (term "1"))
                        (rule "applyOnPV" (formula "15") (term "0"))
                        (rule "ifthenelse_concrete4" (formula "15"))
                        (rule "boolean_not_equal_2" (formula "15") (term "1"))
                        (rule "concrete_or_4" (formula "15"))
                        (rule "notRight" (formula "15"))
                        (rule "less_equal_than_comparison_simple" (formula "16") (term "1"))
                        (rule "sequentialToParallel2" (formula "16"))
                        (rule "simplifyUpdate2" (formula "16"))
                        (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                        (rule "applyOnElementary" (formula "16") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "16") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "16") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "16") (term "1,0,0,1,0"))
                        (rule "blockEmpty" (formula "16") (term "1"))
                        (rule "methodCallReturn" (formula "16") (term "1"))
                        (rule "assignment" (formula "16") (term "1"))
                        (rule "sequentialToParallel2" (formula "16"))
                        (rule "simplifyUpdate2" (formula "16"))
                        (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                        (rule "applyOnElementary" (formula "16") (term "1,0"))
                        (rule "applyOnPV" (formula "16") (term "0,1,0"))
                        (rule "methodCallEmpty" (formula "16") (term "1"))
                        (rule "simplifyUpdate2" (formula "16"))
                        (rule "emptyModality" (formula "16") (term "1"))
                        (rule "applyOnRigidFormula" (formula "16"))
                        (rule "applyOnPV" (formula "16") (term "0"))
                        (rule "simplifyUpdate1" (formula "16") (term "1"))
                        (rule "ifthenelse_concrete3" (formula "16"))
                        (rule "boolean_not_equal_2" (formula "16") (term "1"))
                        (rule "concrete_or_4" (formula "16"))
                        (rule "inEqSimp_leqRight" (formula "16"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                        (rule "leq_literals" (formula "2") (term "0"))
                        (rule "concrete_or_1" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "allLeft" (formula "14") (inst "t=x_0_1"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                        (rule "Query_axiom_for_isSingleDigit_int__in_NumericTextBox" (formula "14") (term "0,0,0") (inst "isSingleDigit_sk=isSingleDigit_sk_4") (inst "#p0=x_1") (inst "#self=n") (inst "#res=x") (ifseqformula "8"))
                        (rule "eqSymm" (formula "14") (term "0,1"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "15") (term "0,1,0"))
                        (rule "concrete_and_2" (formula "15") (term "1,0"))
                        (rule "concrete_or_4" (formula "15") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "15") (term "0,0,1"))
                        (rule "leq_literals" (formula "15") (term "0,1"))
                        (rule "concrete_and_2" (formula "15") (term "1"))
                        (rule "concrete_or_4" (formula "15"))
                        (rule "applyEqRigid" (formula "14") (term "1,0,1") (ifseqformula "15"))
                        (rule "boxToDiamond" (formula "14") (term "1"))
                        (rule "notLeft" (formula "14"))
                        (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_isSingleDigit_3,savedHeapBefore_isSingleDigit_3"))
                        (rule "simplifyUpdate2" (formula "17") (term "1"))
                        (rule "returnUnfold" (formula "17") (term "1") (inst "#v0=x_2"))
                        (rule "variableDeclarationAssign" (formula "17") (term "1"))
                        (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_21"))
                        (rule "compound_assignment_3_nonsimple" (formula "17") (term "1"))
                        (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x_22"))
                        (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_22"))
                        (rule "compound_assignment_2" (formula "17") (term "1") (inst "#v=x_23"))
                        (rule "variableDeclarationAssign" (formula "17") (term "1"))
                        (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_23"))
                        (rule "greater_equal_than_comparison_simple" (formula "17") (term "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "applyOnElementary" (formula "17") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                        (rule "inEqSimp_subsumption1" (formula "17") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "leq_literals" (formula "17") (term "0,0,0,1,0"))
                        (rule "concrete_or_1" (formula "17") (term "0,0,1,0"))
                        (rule "ifthenelse_true" (formula "17") (term "0,1,0"))
                        (rule "compound_assignment_1_new" (formula "17") (term "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "applyOnElementary" (formula "17") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                        (rule "boolean_equal" (formula "17") (term "0,0,1,0"))
                        (rule "ifthenelse_true" (formula "17") (term "0,1,0"))
                        (rule "ifElseSplit" (formula "17"))
                        (branch "if x_22 true"
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "simplifyUpdate2" (formula "18"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "simplifyUpdate1" (formula "1") (term "1"))
                           (rule "applyOnPV" (formula "1") (term "0"))
                           (rule "boolean_not_equal_2" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_22 false"
                           (rule "false_to_not_true" (formula "1") (term "1"))
                           (rule "simplifyUpdate2" (formula "18"))
                           (rule "simplifyUpdate2" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "applyOnRigidFormula" (formula "17"))
                           (rule "simplifyUpdate1" (formula "17") (term "1"))
                           (rule "applyOnPV" (formula "17") (term "0"))
                           (rule "boolean_not_equal_2" (formula "17"))
                           (rule "false_right" (formula "17"))
                           (rule "less_equal_than_comparison_simple" (formula "17") (term "1"))
                           (rule "sequentialToParallel2" (formula "17"))
                           (rule "simplifyUpdate2" (formula "17"))
                           (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                           (rule "applyOnElementary" (formula "17") (term "1,0"))
                           (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                           (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                           (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                           (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                           (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                           (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                           (rule "blockEmpty" (formula "17") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "17") (term "0,0,0,1,0"))
                           (rule "concrete_and_2" (formula "17") (term "0,0,1,0"))
                           (rule "ifthenelse_false" (formula "17") (term "0,1,0"))
                           (rule "methodCallReturn" (formula "17") (term "1"))
                           (rule "assignment" (formula "17") (term "1"))
                           (rule "sequentialToParallel2" (formula "17"))
                           (rule "simplifyUpdate2" (formula "17"))
                           (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                           (rule "applyOnElementary" (formula "17") (term "1,0"))
                           (rule "applyOnPV" (formula "17") (term "0,1,0"))
                           (rule "methodCallEmpty" (formula "17") (term "1"))
                           (rule "simplifyUpdate2" (formula "17"))
                           (rule "emptyModality" (formula "17") (term "1"))
                           (rule "notRight" (formula "17"))
                           (rule "applyOnRigidFormula" (formula "1"))
                           (rule "applyOnPV" (formula "1") (term "0"))
                           (rule "simplifyUpdate1" (formula "1") (term "1"))
                           (rule "boolean_not_equal_2" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch
                     (rule "allRight" (formula "14") (inst "sk=x_18_0"))
                     (rule "orRight" (formula "14"))
                     (rule "orRight" (formula "14"))
                     (rule "inEqSimp_geqRight" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "15"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                     (rule "eqClose" (formula "1") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                     (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                     (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "2"))
                     (rule "mul_literals" (formula "9") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0"))
                     (rule "add_literals" (formula "9") (term "0,0"))
                     (rule "add_zero_left" (formula "9") (term "0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch "self.cursorPosition = 1 + x_18_0 TRUE"
                        (rule "close" (formula "19") (ifseqformula "2"))
                     )
                     (branch "self.cursorPosition = 1 + x_18_0 FALSE"
                        (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "18"))
                        (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "14"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1"))
                        (rule "add_literals" (formula "1") (term "0,1"))
                        (rule "add_zero_left" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                        (rule "concrete_and_2" (formula "14"))
                        (rule "false_right" (formula "14"))
                        (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                        (rule "mul_literals" (formula "9") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                        (rule "leq_literals" (formula "8") (term "0"))
                        (rule "concrete_or_1" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "allLeft" (formula "13") (inst "t=x_18_0"))
                        (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "18"))
                        (rule "concrete_or_4" (formula "13"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "13") (term "1"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                        (rule "mul_literals" (formula "13") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0"))
                        (rule "leq_literals" (formula "13") (term "0,0"))
                        (rule "concrete_and_2" (formula "13") (term "0"))
                        (rule "concrete_or_2" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (t_1 = null)"
                  (rule "false_right" (formula "15"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "close" (formula "12") (ifseqformula "1"))
               )
            )
            (branch "if x_8 false"
               (rule "false_to_not_true" (formula "1") (term "1"))
               (rule "simplifyUpdate2" (formula "14"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "11"))
               (rule "simplifyUpdate1" (formula "11") (term "1"))
               (rule "applyOnPV" (formula "11") (term "0"))
               (rule "ifthenelse_concrete4" (formula "11"))
               (rule "boolean_not_equal_2" (formula "11") (term "1"))
               (rule "concrete_or_4" (formula "11"))
               (rule "notRight" (formula "11"))
               (rule "methodCallEmpty" (formula "14") (term "1"))
               (rule "tryEmpty" (formula "14") (term "1"))
               (rule "emptyModality" (formula "14") (term "1"))
               (rule "applyOnRigidFormula" (formula "14"))
               (rule "simplifyUpdate2" (formula "14") (term "0"))
               (rule "simplifyUpdate2" (formula "14") (term "1"))
               (rule "applyOnRigidFormula" (formula "14") (term "0"))
               (rule "simplifyUpdate2" (formula "14") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "1"))
               (rule "applyOnPV" (formula "14") (term "0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1"))
               (rule "eqClose" (formula "14") (term "1"))
               (rule "concrete_and_3" (formula "14"))
               (rule "applyOnRigidFormula" (formula "14") (term "0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "1"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "0,1,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,0"))
               (rule "polySimp_homoEq" (formula "14") (term "0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "1,1"))
               (rule "applyOnRigidFormula" (formula "14") (term "0,1"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,1,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1,0,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "1,1,1"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1,1,1"))
               (rule "applyOnPV" (formula "14") (term "0,1,1,1"))
               (rule "applyOnRigidFormula" (formula "14") (term "0,1,1"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "2,1,0,1"))
               (rule "applyOnPV" (formula "14") (term "0,1,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1,0,1"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,0,1"))
               (rule "applyOnPV" (formula "14") (term "0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,0,0"))
               (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "14") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2" (formula "14") (term "0,0"))
               (rule "add_literals" (formula "14") (term "1,0,0"))
               (rule "times_zero_1" (formula "14") (term "0,0"))
               (rule "eqClose" (formula "14") (term "0"))
               (rule "concrete_and_1" (formula "14"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,1,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "1,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1,0,1"))
               (rule "applyOnRigidTerm" (formula "14") (term "2,0,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "0,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,0,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,0,1"))
               (rule "applyOnPV" (formula "14") (term "0,0,1,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0,1"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,2,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,2,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,2,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,2,0,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "0,0,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,0,1,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1,0,1,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "2,1,0,1,0,1"))
               (rule "applyOnPV" (formula "14") (term "0,1,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,2,0,0"))
               (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "0,2,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "0,2,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,0,0,0,1"))
               (rule "applyOnPV" (formula "14") (term "0,0,0,0,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,0,0,0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,1"))
               (rule "replace_known_left" (formula "14") (term "0,0,0,1") (ifseqformula "1"))
               (rule "concrete_not_1" (formula "14") (term "0,0,1"))
               (rule "concrete_impl_2" (formula "14") (term "0,1"))
               (rule "concrete_and_1" (formula "14") (term "1"))
               (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfStore" (formula "1"))
               (rule "eqClose" (formula "1") (term "0,0,0,0"))
               (rule "concrete_and_1" (formula "1") (term "0,0,0"))
               (rule "eqClose" (formula "1") (term "0,0,0"))
               (rule "concrete_and_1" (formula "1") (term "0,0"))
               (rule "equalUnique" (formula "1") (term "0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "0,0"))
               (rule "ifthenelse_true" (formula "1") (term "0"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
               (rule "eqClose" (formula "15") (term "0"))
               (rule "concrete_and_1" (formula "15"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "Class_invariant_axiom_for_NumericTextBox" (formula "14") (inst "x=x_9") (inst "x_0=x_0") (ifseqformula "4"))
               (rule "inInt" (formula "14") (term "1,0,0,1"))
               (rule "concrete_and_3" (formula "14") (term "0,0,1"))
               (rule "inInt" (formula "14") (term "1,0,0,1,0"))
               (rule "concrete_and_3" (formula "14") (term "0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,2,0,1,0,1,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0"))
               (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "0,1,1,0,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0"))
               (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "0,0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,1,0,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,0,0,0,1"))
               (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "1,0,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "1,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,0,1,0"))
               (rule "replaceKnownSelect_taclet001_0" (formula "14") (term "1,1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet001_1" (formula "14") (term "1,1,0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,2,0,1,0,1,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,0,0,0,0"))
               (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "12"))
               (rule "concrete_not_2" (formula "14") (term "0,0,0"))
               (rule "concrete_and_1" (formula "14") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,1,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "1,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0,1"))
               (rule "dismissNonSelectedField" (formula "14") (term "0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0"))
               (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,0"))
               (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "7"))
               (rule "concrete_and_1" (formula "14") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_subsumption0" (formula "14") (term "0,0") (ifseqformula "9"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0"))
               (rule "qeq_literals" (formula "14") (term "0,0,0"))
               (rule "concrete_or_1" (formula "14") (term "0,0"))
               (rule "concrete_and_1" (formula "14") (term "0"))
               (rule "nnf_imp2or" (formula "14") (term "0,1"))
               (rule "nnf_imp2or" (formula "14") (term "0,0"))
               (rule "nnf_notAnd" (formula "14") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1"))
               (rule "nnf_notAnd" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,0,0"))
               (rule "andRight" (formula "14"))
               (branch
                  (rule "allRight" (formula "14") (inst "sk=x_0_0"))
                  (rule "orRight" (formula "14"))
                  (rule "orRight" (formula "14"))
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "15"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "Query_axiom_for_isSingleDigit_int__in_NumericTextBox" (formula "16") (term "0") (inst "isSingleDigit_sk=isSingleDigit_sk_0") (inst "#p0=x_1") (inst "#self=n") (inst "#res=x") (ifseqformula "6"))
                  (rule "eqSymm" (formula "1") (term "0,1"))
                  (rule "pullOutSelect" (formula "1") (term "0,1,0") (inst "selectSK=arr_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (rule "eqClose" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                  (rule "apply_eq_boolean_rigid" (formula "2") (term "1,0,1") (ifseqformula "18"))
                  (rule "false_to_not_true" (formula "2") (term "0,1"))
                  (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "4"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                  (rule "leq_literals" (formula "1") (term "0,0,0"))
                  (rule "concrete_and_2" (formula "1") (term "0,0"))
                  (rule "ifthenelse_false" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "2") (term "0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1"))
                  (rule "polySimp_rightDist" (formula "3") (term "1"))
                  (rule "mul_literals" (formula "3") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                  (rule "boxToDiamond" (formula "1") (term "1"))
                  (rule "double_not" (formula "1") (term "0,0,1"))
                  (rule "notLeft" (formula "1"))
                  (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_isSingleDigit,savedHeapBefore_isSingleDigit"))
                  (rule "simplifyUpdate2" (formula "15") (term "1"))
                  (rule "returnUnfold" (formula "15") (term "1") (inst "#v0=x_2"))
                  (rule "variableDeclarationAssign" (formula "15") (term "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_9"))
                  (rule "compound_assignment_3_nonsimple" (formula "15") (term "1"))
                  (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x_10"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_10"))
                  (rule "compound_assignment_2" (formula "15") (term "1") (inst "#v=x_11"))
                  (rule "variableDeclarationAssign" (formula "15") (term "1"))
                  (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_11"))
                  (rule "greater_equal_than_comparison_simple" (formula "15") (term "1"))
                  (rule "sequentialToParallel2" (formula "15"))
                  (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                  (rule "applyOnElementary" (formula "15") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,0"))
                  (rule "compound_assignment_1_new" (formula "15") (term "1"))
                  (rule "sequentialToParallel2" (formula "15"))
                  (rule "simplifyUpdate2" (formula "15"))
                  (rule "simplifyUpdate3" (formula "15") (term "1,0"))
                  (rule "applyOnElementary" (formula "15") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "15") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,0"))
                  (rule "applyOnPV" (formula "15") (term "0,0,0,1,0"))
                  (rule "ifthenelse_concrete3" (formula "15") (term "0,0,1,0"))
                  (rule "boolean_not_equal_2" (formula "15") (term "1,0,0,1,0"))
                  (rule "concrete_or_4" (formula "15") (term "0,0,1,0"))
                  (rule "ifElseSplit" (formula "15"))
                  (branch "if x_10 true"
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "simplifyUpdate2" (formula "16"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "ifthenelse_concrete4" (formula "1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1"))
                     (rule "concrete_or_4" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_geqRight" (formula "15"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "assignment" (formula "16") (term "1"))
                     (rule "sequentialToParallel2" (formula "16"))
                     (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "methodCallReturn" (formula "16") (term "1"))
                     (rule "assignment" (formula "16") (term "1"))
                     (rule "sequentialToParallel2" (formula "16"))
                     (rule "simplifyUpdate2" (formula "16"))
                     (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                     (rule "applyOnElementary" (formula "16") (term "1,0"))
                     (rule "applyOnPV" (formula "16") (term "0,1,0"))
                     (rule "methodCallEmpty" (formula "16") (term "1"))
                     (rule "simplifyUpdate2" (formula "16"))
                     (rule "emptyModality" (formula "16") (term "1"))
                     (rule "applyOnRigidFormula" (formula "16"))
                     (rule "simplifyUpdate1" (formula "16") (term "1"))
                     (rule "applyOnPV" (formula "16") (term "0"))
                     (rule "boolean_not_equal_2" (formula "16"))
                     (rule "false_right" (formula "16"))
                     (rule "allLeft" (formula "14") (inst "t=x_0_0"))
                     (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                     (rule "Query_axiom_for_isSingleDigit_int__in_NumericTextBox" (formula "14") (term "0,0,0") (inst "isSingleDigit_sk=isSingleDigit_sk_2") (inst "#p0=x_1") (inst "#self=n") (inst "#res=x") (ifseqformula "8"))
                     (rule "eqSymm" (formula "14") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,0,1"))
                     (rule "leq_literals" (formula "15") (term "0,1"))
                     (rule "concrete_and_2" (formula "15") (term "1"))
                     (rule "concrete_or_4" (formula "15"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "15") (term "0,1"))
                     (rule "concrete_and_2" (formula "15") (term "1"))
                     (rule "concrete_or_4" (formula "15"))
                     (rule "applyEqRigid" (formula "14") (term "1,0,1") (ifseqformula "15"))
                     (rule "boxToDiamond" (formula "14") (term "1"))
                     (rule "notLeft" (formula "14"))
                     (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_isSingleDigit_1,savedHeapBefore_isSingleDigit_1"))
                     (rule "simplifyUpdate2" (formula "17") (term "1"))
                     (rule "returnUnfold" (formula "17") (term "1") (inst "#v0=x_2"))
                     (rule "variableDeclarationAssign" (formula "17") (term "1"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_15"))
                     (rule "compound_assignment_3_nonsimple" (formula "17") (term "1"))
                     (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x_16"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_16"))
                     (rule "compound_assignment_2" (formula "17") (term "1") (inst "#v=x_17"))
                     (rule "variableDeclarationAssign" (formula "17") (term "1"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_17"))
                     (rule "greater_equal_than_comparison_simple" (formula "17") (term "1"))
                     (rule "sequentialToParallel2" (formula "17"))
                     (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                     (rule "applyOnElementary" (formula "17") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                     (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "17") (term "0,0,1,0") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "17") (term "0,0,0,1,0"))
                     (rule "concrete_and_2" (formula "17") (term "0,0,1,0"))
                     (rule "ifthenelse_false" (formula "17") (term "0,1,0"))
                     (rule "compound_assignment_1_new" (formula "17") (term "1"))
                     (rule "sequentialToParallel2" (formula "17"))
                     (rule "simplifyUpdate2" (formula "17"))
                     (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                     (rule "applyOnElementary" (formula "17") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                     (rule "boolean_not_equal_2" (formula "17") (term "0,0,1,0"))
                     (rule "ifthenelse_false" (formula "17") (term "0,1,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "concrete_or_1" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "ifElseSplit" (formula "17"))
                     (branch "if x_16 true"
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "simplifyUpdate2" (formula "18"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "boolean_equal" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment" (formula "17") (term "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "methodCallReturn" (formula "17") (term "1"))
                        (rule "assignment" (formula "17") (term "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "applyOnElementary" (formula "17") (term "1,0"))
                        (rule "applyOnPV" (formula "17") (term "0,1,0"))
                        (rule "methodCallEmpty" (formula "17") (term "1"))
                        (rule "simplifyUpdate2" (formula "17"))
                        (rule "emptyModality" (formula "17") (term "1"))
                        (rule "notRight" (formula "17"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "boolean_not_equal_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_16 false"
                        (rule "false_to_not_true" (formula "1") (term "1"))
                        (rule "simplifyUpdate2" (formula "18"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "17"))
                        (rule "simplifyUpdate1" (formula "17") (term "1"))
                        (rule "applyOnPV" (formula "17") (term "0"))
                        (rule "boolean_equal" (formula "17"))
                        (rule "closeTrue" (formula "17"))
                     )
                  )
                  (branch "if x_10 false"
                     (rule "false_to_not_true" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "16"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "15"))
                     (rule "applyOnPV" (formula "15") (term "0"))
                     (rule "simplifyUpdate1" (formula "15") (term "1"))
                     (rule "ifthenelse_concrete4" (formula "15"))
                     (rule "boolean_not_equal_2" (formula "15") (term "1"))
                     (rule "concrete_or_4" (formula "15"))
                     (rule "notRight" (formula "15"))
                     (rule "less_equal_than_comparison_simple" (formula "16") (term "1"))
                     (rule "sequentialToParallel2" (formula "16"))
                     (rule "simplifyUpdate2" (formula "16"))
                     (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                     (rule "applyOnElementary" (formula "16") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "16") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "16") (term "0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "16") (term "1,0,0,1,0"))
                     (rule "blockEmpty" (formula "16") (term "1"))
                     (rule "methodCallReturn" (formula "16") (term "1"))
                     (rule "assignment" (formula "16") (term "1"))
                     (rule "sequentialToParallel2" (formula "16"))
                     (rule "simplifyUpdate2" (formula "16"))
                     (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                     (rule "applyOnElementary" (formula "16") (term "1,0"))
                     (rule "applyOnPV" (formula "16") (term "0,1,0"))
                     (rule "methodCallEmpty" (formula "16") (term "1"))
                     (rule "simplifyUpdate2" (formula "16"))
                     (rule "emptyModality" (formula "16") (term "1"))
                     (rule "applyOnRigidFormula" (formula "16"))
                     (rule "simplifyUpdate1" (formula "16") (term "1"))
                     (rule "applyOnPV" (formula "16") (term "0"))
                     (rule "ifthenelse_concrete3" (formula "16"))
                     (rule "boolean_not_equal_2" (formula "16") (term "1"))
                     (rule "concrete_or_4" (formula "16"))
                     (rule "inEqSimp_leqRight" (formula "16"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "1"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "allLeft" (formula "14") (inst "t=x_0_0"))
                     (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                     (rule "Query_axiom_for_isSingleDigit_int__in_NumericTextBox" (formula "14") (term "0,0,0") (inst "isSingleDigit_sk=isSingleDigit_sk_1") (inst "#p0=x_1") (inst "#self=n") (inst "#res=x") (ifseqformula "8"))
                     (rule "eqSymm" (formula "14") (term "0,1"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "15") (term "0,1,0"))
                     (rule "concrete_and_2" (formula "15") (term "1,0"))
                     (rule "concrete_or_4" (formula "15") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "15") (term "0,0,1"))
                     (rule "leq_literals" (formula "15") (term "0,1"))
                     (rule "concrete_and_2" (formula "15") (term "1"))
                     (rule "concrete_or_4" (formula "15"))
                     (rule "applyEqRigid" (formula "14") (term "1,0,1") (ifseqformula "15"))
                     (rule "boxToDiamond" (formula "14") (term "1"))
                     (rule "notLeft" (formula "14"))
                     (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_isSingleDigit_0,savedHeapBefore_isSingleDigit_0"))
                     (rule "simplifyUpdate2" (formula "17") (term "1"))
                     (rule "returnUnfold" (formula "17") (term "1") (inst "#v0=x_2"))
                     (rule "variableDeclarationAssign" (formula "17") (term "1"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_12"))
                     (rule "compound_assignment_3_nonsimple" (formula "17") (term "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "6"))
                     (rule "concrete_or_1" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x_13"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_13"))
                     (rule "compound_assignment_2" (formula "17") (term "1") (inst "#v=x_14"))
                     (rule "variableDeclarationAssign" (formula "17") (term "1"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_14"))
                     (rule "greater_equal_than_comparison_simple" (formula "17") (term "1"))
                     (rule "sequentialToParallel2" (formula "17"))
                     (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                     (rule "applyOnElementary" (formula "17") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                     (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                     (rule "inEqSimp_subsumption1" (formula "17") (term "0,0,1,0") (ifseqformula "1"))
                     (rule "leq_literals" (formula "17") (term "0,0,0,1,0"))
                     (rule "concrete_or_1" (formula "17") (term "0,0,1,0"))
                     (rule "ifthenelse_true" (formula "17") (term "0,1,0"))
                     (rule "compound_assignment_1_new" (formula "17") (term "1"))
                     (rule "sequentialToParallel2" (formula "17"))
                     (rule "simplifyUpdate2" (formula "17"))
                     (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                     (rule "applyOnElementary" (formula "17") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                     (rule "boolean_equal" (formula "17") (term "0,0,1,0"))
                     (rule "ifthenelse_true" (formula "17") (term "0,1,0"))
                     (rule "ifElseSplit" (formula "17"))
                     (branch "if x_13 true"
                        (rule "simplifyUpdate2" (formula "18"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "boolean_not_equal_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_13 false"
                        (rule "false_to_not_true" (formula "1") (term "1"))
                        (rule "simplifyUpdate2" (formula "18"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "17"))
                        (rule "simplifyUpdate1" (formula "17") (term "1"))
                        (rule "applyOnPV" (formula "17") (term "0"))
                        (rule "boolean_not_equal_2" (formula "17"))
                        (rule "false_right" (formula "17"))
                        (rule "less_equal_than_comparison_simple" (formula "17") (term "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "applyOnElementary" (formula "17") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                        (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
                        (rule "blockEmpty" (formula "17") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "17") (term "0,0,0,1,0"))
                        (rule "concrete_and_2" (formula "17") (term "0,0,1,0"))
                        (rule "ifthenelse_false" (formula "17") (term "0,1,0"))
                        (rule "methodCallReturn" (formula "17") (term "1"))
                        (rule "assignment" (formula "17") (term "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "applyOnElementary" (formula "17") (term "1,0"))
                        (rule "applyOnPV" (formula "17") (term "0,1,0"))
                        (rule "methodCallEmpty" (formula "17") (term "1"))
                        (rule "simplifyUpdate2" (formula "17"))
                        (rule "emptyModality" (formula "17") (term "1"))
                        (rule "notRight" (formula "17"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "boolean_not_equal_2" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch
                  (rule "allRight" (formula "14") (inst "sk=x_9_0"))
                  (rule "orRight" (formula "14"))
                  (rule "orRight" (formula "14"))
                  (rule "inEqSimp_leqRight" (formula "14"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (rule "eqClose" (formula "1") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,0,0"))
                  (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                  (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                  (rule "concrete_and_3" (formula "1") (term "0,0"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_homoEq" (formula "1") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                  (rule "mul_literals" (formula "10") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0"))
                  (rule "add_literals" (formula "10") (term "0,0"))
                  (rule "add_zero_left" (formula "10") (term "0"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch "self.cursorPosition = 1 + x_9_0 TRUE"
                     (rule "close" (formula "19") (ifseqformula "2"))
                  )
                  (branch "self.cursorPosition = 1 + x_9_0 FALSE"
                     (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "eqSymm" (formula "18"))
                     (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "15"))
                     (rule "polySimp_addAssoc" (formula "2") (term "1"))
                     (rule "add_literals" (formula "2") (term "0,1"))
                     (rule "add_zero_left" (formula "2") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "15") (ifseqformula "2"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0"))
                     (rule "qeq_literals" (formula "15") (term "0"))
                     (rule "concrete_and_2" (formula "15"))
                     (rule "false_right" (formula "15"))
                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                     (rule "mul_literals" (formula "10") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                     (rule "mul_literals" (formula "10") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                     (rule "leq_literals" (formula "9") (term "0"))
                     (rule "concrete_or_1" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "allLeft" (formula "14") (inst "t=x_9_0"))
                     (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "18"))
                     (rule "concrete_or_4" (formula "14"))
                     (rule "inEqSimp_commuteGeq" (formula "14") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "14") (term "1"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                     (rule "mul_literals" (formula "14") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1"))
                     (rule "inEqSimp_contradInEq0" (formula "14") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1"))
                     (rule "leq_literals" (formula "14") (term "0,1"))
                     (rule "concrete_and_2" (formula "14") (term "1"))
                     (rule "concrete_or_4" (formula "14"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "14"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch "Null Reference (x_arr_2 = null)"
            (rule "false_right" (formula "13"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "close" (formula "11") (ifseqformula "1"))
         )
         (branch "Index Out of Bounds (x_arr_2 != null, but x_6 Out of Bounds!)"
            (rule "false_right" (formula "13"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate2" (formula "1") (term "1"))
            (rule "applyOnRigidFormula" (formula "11"))
            (rule "applyOnPV" (formula "11") (term "0"))
            (rule "simplifyUpdate1" (formula "11") (term "1"))
            (rule "applyOnRigidFormula" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "0,0"))
            (rule "simplifyUpdate1" (formula "1") (term "1,0"))
            (rule "applyOnPV" (formula "1") (term "1,0"))
            (rule "applyOnRigidFormula" (formula "1") (term "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1,1"))
            (rule "applyOnPV" (formula "1") (term "0,1"))
            (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
            (rule "applyOnPV" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "1") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "add_zero_left" (formula "1") (term "0,1"))
            (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
            (rule "inEqSimp_contradInEq0" (formula "1") (term "0") (ifseqformula "8"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
            (rule "concrete_and_2" (formula "1") (term "0"))
            (rule "concrete_or_2" (formula "1"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "7"))
            (rule "qeq_literals" (formula "1") (term "0"))
            (rule "concrete_and_2" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (n_1 = null)"
         (rule "false_right" (formula "13"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "close" (formula "12") (ifseqformula "1"))
      )
   )
   (branch "Null Reference (n = null)"
      (rule "false_right" (formula "13"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "close" (formula "12") (ifseqformula "1"))
   )
)
)

}
