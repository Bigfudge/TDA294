\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Oct 29 18:59:40 CET 2018
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=20000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Mon Oct 29 18:59:40 CET 2018
name=NumericTextBox[NumericTextBox\\:\\:backspace()].JML exceptional_behavior operation contract.1
contract=NumericTextBox[NumericTextBox\\:\\:backspace()].JML exceptional_behavior operation contract.1
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "simonpersson" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "5611")

(branch "dummy ID"
(rule "instanceof_static_type" (formula "1") (term "0,0,0,1,0,0,1,1") (newnames "self,exc,heapAtPre,o,f"))
(rule "boolean_equal" (formula "1") (term "0,0,1,0,0,1,1"))
(rule "concrete_impl_1" (formula "1") (term "0,1,0,0,1,1"))
(rule "elementOfAllLocs" (formula "1") (term "0,0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,1,0,1,1"))
(rule "simplifyUpdate2" (formula "1") (term "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "9"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "concrete_and_3" (formula "9") (term "0,1"))
(rule "Class_invariant_axiom_for_NumericTextBox" (formula "7") (inst "x=x") (inst "x_0=x_0") (ifseqformula "3"))
(rule "inInt" (formula "7") (term "1,0,0,1"))
(rule "concrete_and_3" (formula "7") (term "0,0,1"))
(rule "inInt" (formula "7") (term "1,0,0,1,0"))
(rule "concrete_and_3" (formula "7") (term "0,0,1,0"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
(rule "qeq_literals" (formula "7"))
(rule "true_left" (formula "7"))
(rule "applyEq" (formula "9") (term "1,0,0,0") (ifseqformula "5"))
(rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
(rule "times_zero_2" (formula "8") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "mul_literals" (formula "8") (term "1,1,0,0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "neq_or" (formula "8") (term "0,0"))
(rule "concrete_or_1" (formula "8") (term "0"))
(rule "all_unused" (formula "8"))
(rule "true_left" (formula "8"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_backspace,savedHeapBefore_backspace"))
(rule "simplifyUpdate2" (formula "11") (term "1"))
(rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "x"))
(rule "compound_equality_comparison_1" (formula "11") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "x_1"))
(rule "assignment_read_attribute_this" (formula "11"))
(rule "sequentialToParallel2" (formula "11"))
(rule "simplifyUpdate3" (formula "11") (term "1,0"))
(rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "5"))
(rule "equality_comparison_simple" (formula "11") (term "1"))
(rule "sequentialToParallel2" (formula "11"))
(rule "simplifyUpdate2" (formula "11"))
(rule "simplifyUpdate3" (formula "11") (term "1,0"))
(rule "applyOnElementary" (formula "11") (term "1,0"))
(rule "applyOnRigidTerm" (formula "11") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "11") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "11") (term "1,0,1,0"))
(rule "applyOnRigidFormula" (formula "11") (term "0,0,1,0"))
(rule "applyOnPV" (formula "11") (term "0,0,0,1,0"))
(rule "simplifyUpdate1" (formula "11") (term "1,0,0,1,0"))
(rule "eqClose" (formula "11") (term "0,0,1,0"))
(rule "ifthenelse_true" (formula "11") (term "0,1,0"))
(rule "arrayLengthIsAShort" (formula "7") (term "0"))
(rule "inShort" (formula "7"))
(rule "true_left" (formula "7"))
(rule "arrayLengthNotNegative" (formula "7") (term "0"))
(rule "ifSplit" (formula "11"))
(branch "if x true"
   (rule "simplifyUpdate2" (formula "1"))
   (rule "simplifyUpdate2" (formula "12"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "boolean_equal" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_2"))
   (rule "compound_inequality_comparison_1" (formula "11") (term "1") (inst "#v0=t"))
   (rule "variableDeclarationAssign" (formula "11") (term "1"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "t"))
   (rule "assignment_read_attribute_this" (formula "11"))
   (rule "sequentialToParallel2" (formula "11"))
   (rule "simplifyUpdate3" (formula "11") (term "1,0"))
   (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "6"))
   (rule "inequality_comparison_simple" (formula "11") (term "1"))
   (rule "sequentialToParallel2" (formula "11"))
   (rule "simplifyUpdate2" (formula "11"))
   (rule "simplifyUpdate3" (formula "11") (term "1,0"))
   (rule "applyOnElementary" (formula "11") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "11") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "11") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "11") (term "1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "11") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "11") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "11") (term "1,0,0,1,0"))
   (rule "eqClose" (formula "11") (term "0,0,1,0"))
   (rule "ifthenelse_true" (formula "11") (term "0,1,0"))
   (rule "ifSplit" (formula "11"))
   (branch "if x_2 true"
      (rule "simplifyUpdate2" (formula "1"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "boolean_not_equal_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x_2 false"
      (rule "false_to_not_true" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "9"))
      (rule "applyOnPV" (formula "9") (term "0"))
      (rule "simplifyUpdate1" (formula "9") (term "1"))
      (rule "boolean_not_equal_2" (formula "9"))
      (rule "false_right" (formula "9"))
      (rule "blockThrow" (formula "11") (term "1"))
      (rule "throwUnfold" (formula "11") (term "1") (inst "#v0=r"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "r"))
      (rule "instanceCreationAssignmentUnfoldArguments" (formula "11") (term "1"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "var"))
      (rule "stringAssignment" (formula "11") (term "1"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "simplifyUpdate2" (formula "2"))
      (rule "notLeft" (formula "1"))
      (rule "sequentialToParallel2" (formula "13"))
      (rule "simplifyUpdate3" (formula "13") (term "1,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "12"))
      (rule "concrete_or_2" (formula "8"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0") (ifseqformula "2"))
      (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "8"))
      (rule "concrete_or_1" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "instanceCreationAssignment" (formula "14") (term "1") (inst "#v0=r_1"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "r_1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "14") (term "1") (inst "#v0=r_2"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "r_2"))
      (rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
      (rule "simplifyUpdate2" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "__NEW__"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "14") (term "1") (inst "#v0=r_3"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "r_3"))
      (rule "allocateInstance" (formula "14"))
      (rule "false_to_not_true" (formula "1") (term "1,1,0,1"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "4"))
      (rule "concrete_impl_1" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
      (rule "simplifyUpdate2" (formula "17") (term "1"))
      (rule "assignment_write_attribute_this" (formula "17"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "3,0,1,0"))
      (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "17") (term "1,0,1,0"))
      (rule "methodCallWithinClass" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
      (rule "simplifyUpdate2" (formula "17") (term "1"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
      (rule "simplifyUpdate2" (formula "17") (term "1"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
      (rule "simplifyUpdate2" (formula "17") (term "1"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
      (rule "simplifyUpdate2" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment_write_attribute_this" (formula "17"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "3,0,1,0"))
      (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "17") (term "1,0,1,0"))
      (rule "assignment_write_attribute_this" (formula "17"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "3,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
      (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "17") (term "1,0,1,0"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "methodCallReturnIgnoreResult" (formula "17") (term "1"))
      (rule "methodCallReturn" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnPV" (formula "17") (term "0,1,0"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (rule "blockEmpty" (formula "17") (term "1"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnPV" (formula "17") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "var_1"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnPV" (formula "17") (term "0,1,0"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
      (rule "simplifyUpdate2" (formula "17") (term "1"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "arg0"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnPV" (formula "17") (term "0,1,0"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
      (rule "simplifyUpdate2" (formula "17") (term "1"))
      (rule "methodCallSuper" (formula "17") (term "1"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "arg0_1"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,0"))
      (rule "applyOnPV" (formula "17") (term "0,1,0"))
      (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
      (rule "simplifyUpdate2" (formula "17") (term "1"))
      (rule "methodCall" (formula "17") (newnames "target"))
      (branch "Normal Execution (this != null )"
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "arg0_2"))
         (rule "assignment" (formula "17") (term "1"))
         (rule "sequentialToParallel2" (formula "17"))
         (rule "simplifyUpdate2" (formula "17"))
         (rule "simplifyUpdate3" (formula "17") (term "1,0"))
         (rule "applyOnElementary" (formula "17") (term "1,0"))
         (rule "applyOnPV" (formula "17") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "arg1"))
         (rule "assignment" (formula "17") (term "1"))
         (rule "sequentialToParallel2" (formula "17"))
         (rule "simplifyUpdate3" (formula "17") (term "1,0"))
         (rule "variableDeclarationAssign" (formula "17") (term "1"))
         (rule "variableDeclaration" (formula "17") (term "1") (newnames "target"))
         (rule "delete_unnecessary_cast" (formula "17") (term "1"))
         (branch "Normal Execution (r_1 instanceof java.lang.Throwable)"
            (rule "instanceof_static_type" (formula "1") (term "0,1,1"))
            (rule "boolean_equal" (formula "1") (term "1,1"))
            (rule "concrete_or_3" (formula "1") (term "1"))
            (rule "true_left" (formula "1"))
            (rule "sequentialToParallel2" (formula "17"))
            (rule "simplifyUpdate3" (formula "17") (term "1,0"))
            (rule "applyOnElementary" (formula "17") (term "1,0"))
            (rule "applyOnPV" (formula "17") (term "0,1,0"))
            (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
            (rule "simplifyUpdate2" (formula "17") (term "1"))
            (rule "methodCallSuper" (formula "17") (term "1"))
            (rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
            (rule "simplifyUpdate2" (formula "17") (term "1"))
            (rule "methodCallEmpty" (formula "17") (term "1"))
            (rule "blockEmpty" (formula "17") (term "1"))
            (rule "assignment_write_attribute_this" (formula "17"))
            (rule "sequentialToParallel2" (formula "17"))
            (rule "simplifyUpdate2" (formula "17"))
            (rule "simplifyUpdate3" (formula "17") (term "1,0"))
            (rule "applyOnElementary" (formula "17") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "3,0,1,0"))
            (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "17") (term "1,0,1,0"))
            (rule "dropEffectlessStores" (formula "17") (term "0,1,0"))
            (rule "assignment_write_attribute_this" (formula "17"))
            (rule "sequentialToParallel2" (formula "17"))
            (rule "simplifyUpdate2" (formula "17"))
            (rule "simplifyUpdate3" (formula "17") (term "1,0"))
            (rule "applyOnElementary" (formula "17") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "3,0,1,0"))
            (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "17") (term "1,0,1,0"))
            (rule "dropEffectlessStores" (formula "17") (term "0,1,0"))
            (rule "assignment_write_attribute_this" (formula "17"))
            (rule "sequentialToParallel2" (formula "17"))
            (rule "simplifyUpdate2" (formula "17"))
            (rule "simplifyUpdate3" (formula "17") (term "1,0"))
            (rule "applyOnElementary" (formula "17") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "3,0,1,0"))
            (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "17") (term "1,0,1,0"))
            (rule "dropEffectlessStores" (formula "17") (term "0,1,0"))
            (rule "applyOnPV" (formula "17") (term "3,0,1,0"))
            (rule "emptyStatement" (formula "17") (term "1"))
            (rule "assignment_write_attribute_this" (formula "17"))
            (rule "sequentialToParallel2" (formula "17"))
            (rule "simplifyUpdate2" (formula "17"))
            (rule "simplifyUpdate3" (formula "17") (term "1,0"))
            (rule "applyOnElementary" (formula "17") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "3,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "17") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "17") (term "3,0,1,0"))
            (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
            (rule "dropEffectlessStores" (formula "17") (term "0,1,0"))
            (rule "emptyStatement" (formula "17") (term "1"))
            (rule "methodCallEmpty" (formula "17") (term "1"))
            (rule "simplifyUpdate2" (formula "17"))
            (rule "methodCallEmpty" (formula "17") (term "1"))
            (rule "methodCallEmpty" (formula "17") (term "1"))
            (rule "methodCallEmpty" (formula "17") (term "1"))
            (rule "blockEmpty" (formula "17") (term "1"))
            (rule "assignment_write_attribute" (formula "17"))
            (branch "Normal Execution (r_1 != null)"
               (rule "sequentialToParallel2" (formula "17"))
               (rule "simplifyUpdate2" (formula "17"))
               (rule "simplifyUpdate3" (formula "17") (term "1,0"))
               (rule "applyOnElementary" (formula "17") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "3,0,1,0"))
               (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "17") (term "1,0,1,0"))
               (rule "dropEffectlessStores" (formula "17") (term "0,1,0"))
               (rule "assignment" (formula "17") (term "1"))
               (rule "sequentialToParallel2" (formula "17"))
               (rule "simplifyUpdate2" (formula "17"))
               (rule "simplifyUpdate3" (formula "17") (term "1,0"))
               (rule "applyOnElementary" (formula "17") (term "1,0"))
               (rule "applyOnPV" (formula "17") (term "0,1,0"))
               (rule "blockEmpty" (formula "17") (term "1"))
               (rule "methodCallThrow" (formula "17") (term "1"))
               (rule "tryCatchThrow" (formula "17") (term "1"))
               (rule "ifElseUnfold" (formula "17") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_3"))
               (rule "equality_comparison_simple" (formula "17") (term "1"))
               (rule "sequentialToParallel2" (formula "17"))
               (rule "simplifyUpdate3" (formula "17") (term "1,0"))
               (rule "applyOnElementary" (formula "17") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
               (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "17") (term "0,0,0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0"))
               (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "13"))
               (rule "ifthenelse_false" (formula "17") (term "0,1,0"))
               (rule "ifElseSplit" (formula "17"))
               (branch "if x_3 true"
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "simplifyUpdate2" (formula "18"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "boolean_not_equal_2" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_3 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "18"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "12"))
                  (rule "simplifyUpdate1" (formula "12") (term "1"))
                  (rule "applyOnPV" (formula "12") (term "0"))
                  (rule "boolean_not_equal_2" (formula "12"))
                  (rule "false_right" (formula "12"))
                  (rule "ifElseSplit" (formula "17"))
                  (branch "if r instanceof java.lang.Throwable true"
                     (rule "instanceof_static_type" (formula "1") (term "2,0,1"))
                     (rule "ifthenelse_concrete4" (formula "1") (term "1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1,1"))
                     (rule "concrete_or_4" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "12"))
                     (rule "applyOnPV" (formula "12") (term "0"))
                     (rule "simplifyUpdate1" (formula "12") (term "1"))
                     (rule "variableDeclaration" (formula "17") (term "1") (newnames "e"))
                     (rule "delete_unnecessary_cast" (formula "17") (term "1"))
                     (branch "Normal Execution (r instanceof java.lang.Throwable)"
                        (rule "instanceof_static_type" (formula "1") (term "0,1,1"))
                        (rule "boolean_equal" (formula "1") (term "1,1"))
                        (rule "concrete_or_3" (formula "1") (term "1"))
                        (rule "true_left" (formula "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "applyOnElementary" (formula "17") (term "1,0"))
                        (rule "applyOnPV" (formula "17") (term "0,1,0"))
                        (rule "assignment" (formula "17") (term "1"))
                        (rule "sequentialToParallel2" (formula "17"))
                        (rule "simplifyUpdate2" (formula "17"))
                        (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                        (rule "applyOnElementary" (formula "17") (term "1,0"))
                        (rule "applyOnPV" (formula "17") (term "0,1,0"))
                        (rule "emptyModality" (formula "17") (term "1"))
                        (rule "applyOnRigidFormula" (formula "17"))
                        (rule "simplifyUpdate2" (formula "17") (term "0"))
                        (rule "applyOnRigidFormula" (formula "17") (term "1"))
                        (rule "simplifyUpdate2" (formula "17") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "17") (term "0,1"))
                        (rule "applyOnRigidFormula" (formula "17") (term "0"))
                        (rule "applyOnRigidFormula" (formula "17") (term "1,1"))
                        (rule "applyOnRigidFormula" (formula "17") (term "0,1"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,1"))
                        (rule "applyOnPV" (formula "17") (term "0,0,1"))
                        (rule "applyOnRigidFormula" (formula "17") (term "0,0"))
                        (rule "applyOnPV" (formula "17") (term "0,0,0"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,0"))
                        (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "13"))
                        (rule "concrete_not_2" (formula "17") (term "0"))
                        (rule "concrete_and_1" (formula "17"))
                        (rule "applyOnRigidFormula" (formula "17") (term "1,1"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,1,1"))
                        (rule "applyOnRigidFormula" (formula "17") (term "0,1"))
                        (rule "simplifyUpdate1" (formula "17") (term "1,0,1"))
                        (rule "applyOnRigidTerm" (formula "17") (term "0,1,1"))
                        (rule "applyOnPV" (formula "17") (term "0,0,1,1"))
                        (rule "instanceof_static_type" (formula "17") (term "0,1,1"))
                        (rule "boolean_equal" (formula "17") (term "1,1"))
                        (rule "concrete_or_3" (formula "17") (term "1"))
                        (rule "concrete_and_3" (formula "17"))
                        (rule "Class_invariant_axiom_for_NumericTextBox" (formula "17") (inst "x=x_4") (inst "x_0=x_0") (ifseqformula "5"))
                        (rule "inInt" (formula "17") (term "1,0,0,1"))
                        (rule "concrete_and_3" (formula "17") (term "0,0,1"))
                        (rule "inInt" (formula "17") (term "1,0,0,1,0"))
                        (rule "concrete_and_3" (formula "17") (term "0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "2,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "2,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,2,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,2,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "2,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,1"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,2,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "17") (term "1,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0"))
                        (rule "pullOutSelect" (formula "17") (term "1,1,0,1") (inst "selectSK=NumericTextBox_EMPTY_0"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "17") (term "0,0,1,0,0") (inst "selectSK=NumericTextBox_cursorPosition_0"))
                        (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "18") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "18") (term "1,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "18") (term "1,1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "applyEq" (formula "17") (term "1,1,1,0,0,1,0") (ifseqformula "7"))
                        (rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0"))
                        (rule "applyEq" (formula "17") (term "0,0,1,0,0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "17") (term "0,1,0,0"))
                        (rule "concrete_and_1" (formula "17") (term "1,0,0"))
                        (rule "applyEq" (formula "17") (term "1,0,0,0,1") (ifseqformula "7"))
                        (rule "applyEq" (formula "17") (term "1,1,0,0") (ifseqformula "7"))
                        (rule "pullOutSelect" (formula "17") (term "0,0,0,0,0") (inst "selectSK=NumericTextBox_content_0"))
                        (rule "applyEq" (formula "18") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "1,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "1,2,0,1,0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "18") (term "0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "18") (term "0,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "18") (term "1,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "18") (term "1,2,0,1,0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "17") (term "1,0,0") (ifseqformula "10"))
                        (rule "concrete_and_3" (formula "17") (term "0,0"))
                        (rule "replace_known_right" (formula "17") (term "0,0,0") (ifseqformula "15"))
                        (rule "concrete_not_2" (formula "17") (term "0,0"))
                        (rule "concrete_and_1" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "17") (term "0,1"))
                        (rule "nnf_imp2or" (formula "17") (term "0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0,1"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,1,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,1,0,0,0"))
                        (rule "neq_or_2" (formula "17") (term "0,0,0"))
                        (rule "concrete_or_1" (formula "17") (term "0,0"))
                        (rule "all_unused" (formula "17") (term "0"))
                        (rule "concrete_and_1" (formula "17"))
                        (rule "allRight" (formula "17") (inst "sk=x_4_0"))
                        (rule "orRight" (formula "17"))
                        (rule "orRight" (formula "17"))
                        (rule "inEqSimp_leqRight" (formula "17"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "18"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "allLeft" (formula "13") (inst "t=x_4_0"))
                        (rule "replace_known_right" (formula "13") (term "1") (ifseqformula "20"))
                        (rule "concrete_or_4" (formula "13"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "13") (term "0,0"))
                        (rule "concrete_and_2" (formula "13") (term "0"))
                        (rule "concrete_or_2" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "1"))
                        (rule "andLeft" (formula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "13"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                        (rule "add_literals" (formula "13") (term "1,1,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0"))
                        (rule "add_literals" (formula "13") (term "0"))
                        (rule "leq_literals" (formula "13"))
                        (rule "closeFalse" (formula "13"))
                     )
                     (branch "ClassCastException (!(r instanceof java.lang.Throwable))"
                        (rule "instanceof_static_type" (formula "17") (term "0,1,1"))
                        (rule "boolean_equal" (formula "17") (term "1,1"))
                        (rule "concrete_or_3" (formula "17") (term "1"))
                        (rule "closeTrue" (formula "17"))
                     )
                  )
                  (branch "if r instanceof java.lang.Throwable false"
                     (rule "instanceof_static_type" (formula "1") (term "2,0,1"))
                     (rule "false_to_not_true" (formula "1") (term "1"))
                     (rule "ifthenelse_concrete4" (formula "1") (term "0,1"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1,0,1"))
                     (rule "concrete_or_4" (formula "1") (term "0,1"))
                     (rule "double_not" (formula "1") (term "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "close" (formula "14") (ifseqformula "1"))
                  )
               )
            )
            (branch "Null Reference (r_1 = null)"
               (rule "false_right" (formula "18"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "close" (formula "14") (ifseqformula "1"))
            )
         )
         (branch "ClassCastException (!(r_1 instanceof java.lang.Throwable))"
            (rule "instanceof_static_type" (formula "17") (term "0,1,1"))
            (rule "boolean_equal" (formula "17") (term "1,1"))
            (rule "concrete_or_3" (formula "17") (term "1"))
            (rule "closeTrue" (formula "17"))
         )
      )
      (branch "Null Reference (this = null)"
         (rule "false_right" (formula "18"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "close" (formula "14") (ifseqformula "1"))
      )
   )
)
(branch "if x false"
   (rule "false_to_not_true" (formula "1") (term "1"))
   (rule "simplifyUpdate2" (formula "12"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "applyOnPV" (formula "9") (term "0"))
   (rule "simplifyUpdate1" (formula "9") (term "1"))
   (rule "boolean_equal" (formula "9"))
   (rule "closeTrue" (formula "9"))
)
)

}
